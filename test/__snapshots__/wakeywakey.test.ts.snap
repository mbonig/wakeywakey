// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`default snapshot 1`] = `
Stack {
  "_logicalIds": LogicalIDs {
    "renames": Object {},
    "reverse": Object {},
  },
  "_missingContext": Array [],
  "_stackDependencies": Object {},
  "_stackName": "test-stack",
  "_versionReportingEnabled": undefined,
  "account": "\${Token[AWS.AccountId.0]}",
  "artifactId": "test-stack",
  "environment": "aws://unknown-account/unknown-region",
  "node": ConstructNode {
    "_actualNode": Node {
      "_aspects": Array [],
      "_children": Object {
        "AssetParameters": Construct {
          "node": ConstructNode {
            "_actualNode": Node {
              "_aspects": Array [],
              "_children": Object {
                "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8": FileAssetParameters {
                  "artifactHashParameter": CfnParameter {
                    "_allowedPattern": undefined,
                    "_allowedValues": undefined,
                    "_constraintDescription": undefined,
                    "_default": undefined,
                    "_description": "Artifact hash for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                    "_maxLength": undefined,
                    "_maxValue": undefined,
                    "_minLength": undefined,
                    "_minValue": undefined,
                    "_noEcho": undefined,
                    "_type": "String",
                    "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.67]}",
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.67]}",
                            "trace": Array [
                              "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:26:34)",
                              "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                              "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                              "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                              "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                              "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                              "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                              "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                              "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "ArtifactHash",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "bucketNameParameter": CfnParameter {
                    "_allowedPattern": undefined,
                    "_allowedValues": undefined,
                    "_constraintDescription": undefined,
                    "_default": undefined,
                    "_description": "S3 bucket for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                    "_maxLength": undefined,
                    "_maxValue": undefined,
                    "_minLength": undefined,
                    "_minValue": undefined,
                    "_noEcho": undefined,
                    "_type": "String",
                    "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.65]}",
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.65]}",
                            "trace": Array [
                              "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:16:32)",
                              "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                              "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                              "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                              "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                              "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                              "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                              "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                              "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "S3Bucket",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "ArtifactHash": CfnParameter {
                          "_allowedPattern": undefined,
                          "_allowedValues": undefined,
                          "_constraintDescription": undefined,
                          "_default": undefined,
                          "_description": "Artifact hash for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                          "_maxLength": undefined,
                          "_maxValue": undefined,
                          "_minLength": undefined,
                          "_minValue": undefined,
                          "_noEcho": undefined,
                          "_type": "String",
                          "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.67]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.67]}",
                                  "trace": Array [
                                    "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:26:34)",
                                    "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                                    "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                                    "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                                    "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                                    "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                                    "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "ArtifactHash",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "S3Bucket": CfnParameter {
                          "_allowedPattern": undefined,
                          "_allowedValues": undefined,
                          "_constraintDescription": undefined,
                          "_default": undefined,
                          "_description": "S3 bucket for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                          "_maxLength": undefined,
                          "_maxValue": undefined,
                          "_minLength": undefined,
                          "_minValue": undefined,
                          "_noEcho": undefined,
                          "_type": "String",
                          "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.65]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.65]}",
                                  "trace": Array [
                                    "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:16:32)",
                                    "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                                    "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                                    "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                                    "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                                    "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                                    "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "S3Bucket",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "S3VersionKey": CfnParameter {
                          "_allowedPattern": undefined,
                          "_allowedValues": undefined,
                          "_constraintDescription": undefined,
                          "_default": undefined,
                          "_description": "S3 key for asset version \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                          "_maxLength": undefined,
                          "_maxValue": undefined,
                          "_minLength": undefined,
                          "_minValue": undefined,
                          "_noEcho": undefined,
                          "_type": "String",
                          "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.66]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.66]}",
                                  "trace": Array [
                                    "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:21:31)",
                                    "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                                    "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                                    "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                                    "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                                    "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                                    "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "S3VersionKey",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "objectKeyParameter": CfnParameter {
                    "_allowedPattern": undefined,
                    "_allowedValues": undefined,
                    "_constraintDescription": undefined,
                    "_default": undefined,
                    "_description": "S3 key for asset version \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                    "_maxLength": undefined,
                    "_maxValue": undefined,
                    "_minLength": undefined,
                    "_minValue": undefined,
                    "_noEcho": undefined,
                    "_type": "String",
                    "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.66]}",
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.66]}",
                            "trace": Array [
                              "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:21:31)",
                              "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                              "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                              "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                              "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                              "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                              "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                              "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                              "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "S3VersionKey",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
              },
              "_context": Object {},
              "_dependencies": Set {},
              "_locked": false,
              "_metadata": Array [],
              "_validations": Array [],
              "host": [Circular],
              "id": "AssetParameters",
              "invokedAspects": Array [],
              "scope": [Circular],
            },
            "host": [Circular],
          },
          Symbol(@aws-cdk/core.DependableTrait): Object {
            "dependencyRoots": Array [
              [Circular],
            ],
          },
        },
        "wakeywakey": WakeyWakey {
          "node": ConstructNode {
            "_actualNode": Node {
              "_aspects": Array [],
              "_children": Object {
                "handler": NodejsFunction {
                  "_allowCrossEnvironment": false,
                  "_invocationGrants": Object {},
                  "_physicalName": undefined,
                  "canCreatePermissions": true,
                  "currentVersionOptions": undefined,
                  "deadLetterQueue": undefined,
                  "env": Object {
                    "account": "\${Token[AWS.AccountId.0]}",
                    "region": "\${Token[AWS.Region.4]}",
                  },
                  "environment": Object {
                    "AWS_NODEJS_CONNECTION_REUSE_ENABLED": Object {
                      "removeInEdge": true,
                      "value": "1",
                    },
                    "INSTANCE_ID": Object {
                      "value": "asdfasdfasdf",
                    },
                  },
                  "functionArn": "\${Token[TOKEN.80]}",
                  "functionName": "\${Token[TOKEN.79]}",
                  "grantPrincipal": Role {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "assumeRoleAction": "sts:AssumeRole",
                    "assumeRolePolicy": Object {
                      "Statement": Array [
                        Object {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": Object {
                            "Service": "\${Token[lambda.amazonaws.com.57]}",
                          },
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "attachedPolicies": AttachedPolicies {
                      "policies": Array [
                        Policy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": "\${Token[TOKEN.81]}",
                          "_policyName": "\${Token[TOKEN.81]}",
                          "document": Object {
                            "Statement": Array [
                              Object {
                                "Action": "ec2:DescribeInstances",
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                              Object {
                                "Action": "ec2:StartInstances",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.0]}",
                            "region": "\${Token[AWS.Region.4]}",
                          },
                          "force": false,
                          "groups": Array [],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": Object {
                                    "groups": Array [
                                      "#{Token[TOKEN.84]}",
                                    ],
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.81]}",
                                    "roles": Array [
                                      "#{Token[TOKEN.82]}",
                                    ],
                                    "users": Array [
                                      "#{Token[TOKEN.83]}",
                                    ],
                                  },
                                  "cfnOptions": Object {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": Array [
                                    "#{Token[TOKEN.84]}",
                                  ],
                                  "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [
                                        Object {
                                          "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                          "trace": Array [
                                            "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                            "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                            "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                            "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                            "new Promise (<anonymous>)",
                                            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                          ],
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "policyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "ec2:DescribeInstances",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      Object {
                                        "Action": "ec2:StartInstances",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.81]}",
                                  "rawOverrides": Object {},
                                  "roles": Array [
                                    "#{Token[TOKEN.82]}",
                                  ],
                                  "stack": [Circular],
                                  "users": Array [
                                    "#{Token[TOKEN.83]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.81]}",
                          "referenceTaken": false,
                          "roles": Array [
                            [Circular],
                          ],
                          "stack": [Circular],
                          "users": Array [],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      ],
                    },
                    "defaultPolicy": Policy {
                      "_allowCrossEnvironment": false,
                      "_physicalName": "\${Token[TOKEN.81]}",
                      "_policyName": "\${Token[TOKEN.81]}",
                      "document": Object {
                        "Statement": Array [
                          Object {
                            "Action": "ec2:DescribeInstances",
                            "Effect": "Allow",
                            "Resource": "*",
                          },
                          Object {
                            "Action": "ec2:StartInstances",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "env": Object {
                        "account": "\${Token[AWS.AccountId.0]}",
                        "region": "\${Token[AWS.Region.4]}",
                      },
                      "force": false,
                      "groups": Array [],
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": Object {
                                "groups": Array [
                                  "#{Token[TOKEN.84]}",
                                ],
                                "policyDocument": Object {
                                  "Statement": Array [
                                    Object {
                                      "Action": "ec2:DescribeInstances",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    Object {
                                      "Action": "ec2:StartInstances",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.81]}",
                                "roles": Array [
                                  "#{Token[TOKEN.82]}",
                                ],
                                "users": Array [
                                  "#{Token[TOKEN.83]}",
                                ],
                              },
                              "cfnOptions": Object {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": Array [
                                "#{Token[TOKEN.84]}",
                              ],
                              "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                              "node": ConstructNode {
                                "_actualNode": Node {
                                  "_aspects": Array [],
                                  "_children": Object {},
                                  "_context": Object {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": Array [
                                    Object {
                                      "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                      "trace": Array [
                                        "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                        "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                        "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                        "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                        "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                        "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                        "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                        "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                        "new Promise (<anonymous>)",
                                        "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                        "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                        "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                      ],
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": Array [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "invokedAspects": Array [],
                                  "scope": [Circular],
                                },
                                "host": [Circular],
                              },
                              "policyDocument": Object {
                                "Statement": Array [
                                  Object {
                                    "Action": "ec2:DescribeInstances",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  Object {
                                    "Action": "ec2:StartInstances",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.81]}",
                              "rawOverrides": Object {},
                              "roles": Array [
                                "#{Token[TOKEN.82]}",
                              ],
                              "stack": [Circular],
                              "users": Array [
                                "#{Token[TOKEN.83]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): Object {
                                "dependencyRoots": Array [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.81]}",
                      "referenceTaken": false,
                      "roles": Array [
                        [Circular],
                      ],
                      "stack": [Circular],
                      "users": Array [],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.0]}",
                      "region": "\${Token[AWS.Region.4]}",
                    },
                    "grantPrincipal": [Circular],
                    "inlinePolicies": Object {},
                    "managedPolicies": Array [
                      AwsManagedPolicy {
                        "managedPolicyArn": "\${Token[TOKEN.55]}",
                      },
                    ],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {
                          "DefaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.81]}",
                            "_policyName": "\${Token[TOKEN.81]}",
                            "document": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "ec2:DescribeInstances",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                Object {
                                  "Action": "ec2:StartInstances",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.0]}",
                              "region": "\${Token[AWS.Region.4]}",
                            },
                            "force": false,
                            "groups": Array [],
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": Object {
                                      "groups": Array [
                                        "#{Token[TOKEN.84]}",
                                      ],
                                      "policyDocument": Object {
                                        "Statement": Array [
                                          Object {
                                            "Action": "ec2:DescribeInstances",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          Object {
                                            "Action": "ec2:StartInstances",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.81]}",
                                      "roles": Array [
                                        "#{Token[TOKEN.82]}",
                                      ],
                                      "users": Array [
                                        "#{Token[TOKEN.83]}",
                                      ],
                                    },
                                    "cfnOptions": Object {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": Array [
                                      "#{Token[TOKEN.84]}",
                                    ],
                                    "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {},
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [
                                          Object {
                                            "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                            "trace": Array [
                                              "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                              "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                              "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                              "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                              "new Promise (<anonymous>)",
                                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                            ],
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.81]}",
                                    "rawOverrides": Object {},
                                    "roles": Array [
                                      "#{Token[TOKEN.82]}",
                                    ],
                                    "stack": [Circular],
                                    "users": Array [
                                      "#{Token[TOKEN.83]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.81]}",
                            "referenceTaken": false,
                            "roles": Array [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": Array [],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "Resource": CfnRole {
                            "_cfnProperties": Object {
                              "assumeRolePolicyDocument": Object {
                                "Statement": Array [
                                  Object {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": Object {
                                      "Service": "\${Token[lambda.amazonaws.com.57]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "description": undefined,
                              "managedPolicyArns": Array [
                                "#{Token[TOKEN.58]}",
                              ],
                              "maxSessionDuration": undefined,
                              "path": undefined,
                              "permissionsBoundary": undefined,
                              "policies": undefined,
                              "roleName": "\${Token[TOKEN.56]}",
                            },
                            "assumeRolePolicyDocument": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": Object {
                                    "Service": "\${Token[lambda.amazonaws.com.57]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attrArn": "\${Token[TOKEN.60]}",
                            "attrRoleId": "\${Token[TOKEN.61]}",
                            "cfnOptions": Object {},
                            "cfnResourceType": "AWS::IAM::Role",
                            "dependsOn": Set {},
                            "description": undefined,
                            "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.59]}",
                            "managedPolicyArns": Array [
                              "#{Token[TOKEN.58]}",
                            ],
                            "maxSessionDuration": undefined,
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [
                                  Object {
                                    "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.59]}",
                                    "trace": Array [
                                      "new Role (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:327:18)",
                                      "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:544:31)",
                                      "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                      "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                      "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                      "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                      "new Promise (<anonymous>)",
                                      "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                      "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                    ],
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "Resource",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "path": undefined,
                            "permissionsBoundary": undefined,
                            "policies": undefined,
                            "rawOverrides": Object {},
                            "roleName": "\${Token[TOKEN.56]}",
                            "stack": [Circular],
                            "tags": TagManager {
                              "initialTagPriority": 50,
                              "priorities": Map {},
                              "resourceTypeName": "AWS::IAM::Role",
                              "tagFormatter": StandardFormatter {},
                              "tagPropertyName": "tags",
                              "tags": Map {},
                            },
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "ServiceRole",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "permissionsBoundary": undefined,
                    "physicalName": "\${Token[TOKEN.56]}",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": Object {},
                      "principalJson": Object {
                        "AWS": Array [
                          "\${Token[TOKEN.62]}",
                        ],
                      },
                    },
                    "principalAccount": "\${Token[AWS.AccountId.0]}",
                    "roleArn": "\${Token[TOKEN.62]}",
                    "roleId": "\${Token[TOKEN.61]}",
                    "roleName": "\${Token[TOKEN.64]}",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "layers": Array [],
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Code": Asset {
                          "assetHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                          "assetPath": "asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                          "bucket": Import {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "autoCreatePolicy": false,
                            "bucketArn": "arn:\${Token[AWS.Partition.3]}:s3:::\${Token[TOKEN.68]}",
                            "bucketDomainName": "\${Token[TOKEN.68]}.s3.\${Token[AWS.URLSuffix.1]}",
                            "bucketDualStackDomainName": "\${Token[TOKEN.68]}.s3.dualstack.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "bucketName": "\${Token[TOKEN.68]}",
                            "bucketRegionalDomainName": "\${Token[TOKEN.68]}.s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "bucketWebsiteDomainName": "\${Token[TOKEN.68]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "bucketWebsiteNewUrlFormat": false,
                            "bucketWebsiteUrl": "http://\${Token[TOKEN.68]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "disallowPublicAccess": false,
                            "encryptionKey": undefined,
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.0]}",
                              "region": "\${Token[AWS.Region.4]}",
                            },
                            "isWebsite": false,
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "AssetBucket",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.74]}",
                            "policy": undefined,
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "httpUrl": "https://s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}/\${Token[TOKEN.68]}/\${Token[TOKEN.71]}\${Token[TOKEN.73]}",
                          "isFile": false,
                          "isZipArchive": true,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "AssetBucket": Import {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "autoCreatePolicy": false,
                                  "bucketArn": "arn:\${Token[AWS.Partition.3]}:s3:::\${Token[TOKEN.68]}",
                                  "bucketDomainName": "\${Token[TOKEN.68]}.s3.\${Token[AWS.URLSuffix.1]}",
                                  "bucketDualStackDomainName": "\${Token[TOKEN.68]}.s3.dualstack.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "bucketName": "\${Token[TOKEN.68]}",
                                  "bucketRegionalDomainName": "\${Token[TOKEN.68]}.s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "bucketWebsiteDomainName": "\${Token[TOKEN.68]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "bucketWebsiteNewUrlFormat": false,
                                  "bucketWebsiteUrl": "http://\${Token[TOKEN.68]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "disallowPublicAccess": false,
                                  "encryptionKey": undefined,
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.0]}",
                                    "region": "\${Token[AWS.Region.4]}",
                                  },
                                  "isWebsite": false,
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "AssetBucket",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.74]}",
                                  "policy": undefined,
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Stage": AssetStaging {
                                  "absoluteStagedPath": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.outANyb1D/asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                                  "assetHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                                  "assetOutdir": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.outANyb1D",
                                  "cacheKey": "74c540905ce7943fc370c1fcdaf099942d3cea0803bd271a3000be3f159e2a62",
                                  "customSourceFingerprint": undefined,
                                  "fingerprintOptions": Object {
                                    "assetHash": undefined,
                                    "assetHashType": "output",
                                    "bundling": Bundling {
                                      "command": Array [
                                        "bash",
                                        "-c",
                                        "npx esbuild --bundle /asset-input/src/wakeywakey.handler.js --target=node12 --platform=node --outfile=/asset-output/index.js --external:aws-sdk",
                                      ],
                                      "environment": undefined,
                                      "externals": Array [
                                        "aws-sdk",
                                      ],
                                      "image": "dummy",
                                      "local": Object {
                                        "tryBundle": [Function],
                                      },
                                      "props": Object {
                                        "depsLockFilePath": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/yarn.lock",
                                        "entry": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.handler.js",
                                        "runtime": Runtime {
                                          "bundlingDockerImage": "amazon/aws-sam-cli-build-image-nodejs12.x",
                                          "family": 0,
                                          "name": "nodejs12.x",
                                          "supportsInlineCode": true,
                                        },
                                      },
                                      "relativeEntryPath": "src/wakeywakey.handler.js",
                                    },
                                    "follow": undefined,
                                    "path": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey",
                                    "sourcePath": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey",
                                  },
                                  "hashType": "output",
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Stage",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "sourcePath": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey",
                                  "stagedPath": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.outANyb1D/asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Code",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "s3BucketName": "\${Token[TOKEN.68]}",
                          "s3ObjectKey": "\${Token[TOKEN.71]}\${Token[TOKEN.73]}",
                          "s3ObjectUrl": "s3://\${Token[TOKEN.68]}/\${Token[TOKEN.71]}\${Token[TOKEN.73]}",
                          "s3Url": "https://s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}/\${Token[TOKEN.68]}/\${Token[TOKEN.71]}\${Token[TOKEN.73]}",
                          "sourceHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnFunction {
                          "_cfnProperties": Object {
                            "code": Object {
                              "imageUri": undefined,
                              "s3Bucket": "\${Token[TOKEN.68]}",
                              "s3Key": "\${Token[TOKEN.71]}\${Token[TOKEN.73]}",
                              "s3ObjectVersion": undefined,
                              "zipFile": undefined,
                            },
                            "deadLetterConfig": undefined,
                            "description": undefined,
                            "environment": "<unresolved-lazy>",
                            "functionName": "\${Token[TOKEN.54]}",
                            "handler": "index.handler",
                            "imageConfig": undefined,
                            "layers": Array [
                              "#{Token[TOKEN.75]}",
                            ],
                            "memorySize": undefined,
                            "packageType": undefined,
                            "reservedConcurrentExecutions": undefined,
                            "role": "\${Token[TOKEN.62]}",
                            "runtime": "nodejs12.x",
                            "timeout": undefined,
                            "tracingConfig": undefined,
                            "vpcConfig": undefined,
                          },
                          "attrArn": "\${Token[TOKEN.77]}",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Function",
                          "code": Object {
                            "imageUri": undefined,
                            "s3Bucket": "\${Token[TOKEN.68]}",
                            "s3Key": "\${Token[TOKEN.71]}\${Token[TOKEN.73]}",
                            "s3ObjectVersion": undefined,
                            "zipFile": undefined,
                          },
                          "codeSigningConfigArn": undefined,
                          "deadLetterConfig": undefined,
                          "dependsOn": Set {},
                          "description": undefined,
                          "environment": "<unresolved-lazy>",
                          "fileSystemConfigs": undefined,
                          "functionName": "\${Token[TOKEN.54]}",
                          "handler": "index.handler",
                          "imageConfig": undefined,
                          "kmsKeyArn": undefined,
                          "layers": Array [
                            "#{Token[TOKEN.75]}",
                          ],
                          "logicalId": "\${Token[test-stack.wakeywakey.handler.Resource.LogicalID.76]}",
                          "memorySize": undefined,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {
                                Role {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "assumeRolePolicy": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": Object {
                                          "Service": "\${Token[lambda.amazonaws.com.57]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": Array [
                                      Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.81]}",
                                        "_policyName": "\${Token[TOKEN.81]}",
                                        "document": Object {
                                          "Statement": Array [
                                            Object {
                                              "Action": "ec2:DescribeInstances",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            Object {
                                              "Action": "ec2:StartInstances",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": Object {
                                          "account": "\${Token[AWS.AccountId.0]}",
                                          "region": "\${Token[AWS.Region.4]}",
                                        },
                                        "force": false,
                                        "groups": Array [],
                                        "node": ConstructNode {
                                          "_actualNode": Node {
                                            "_aspects": Array [],
                                            "_children": Object {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": Object {
                                                  "groups": Array [
                                                    "#{Token[TOKEN.84]}",
                                                  ],
                                                  "policyDocument": Object {
                                                    "Statement": Array [
                                                      Object {
                                                        "Action": "ec2:DescribeInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      Object {
                                                        "Action": "ec2:StartInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.81]}",
                                                  "roles": Array [
                                                    "#{Token[TOKEN.82]}",
                                                  ],
                                                  "users": Array [
                                                    "#{Token[TOKEN.83]}",
                                                  ],
                                                },
                                                "cfnOptions": Object {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": Array [
                                                  "#{Token[TOKEN.84]}",
                                                ],
                                                "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                "node": ConstructNode {
                                                  "_actualNode": Node {
                                                    "_aspects": Array [],
                                                    "_children": Object {},
                                                    "_context": Object {},
                                                    "_dependencies": Set {},
                                                    "_locked": false,
                                                    "_metadata": Array [
                                                      Object {
                                                        "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                        "trace": Array [
                                                          "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                          "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                          "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                          "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                          "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                          "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                                          "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                          "new Promise (<anonymous>)",
                                                          "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                          "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                        ],
                                                        "type": "aws:cdk:logicalId",
                                                      },
                                                    ],
                                                    "_validations": Array [],
                                                    "host": [Circular],
                                                    "id": "Resource",
                                                    "invokedAspects": Array [],
                                                    "scope": [Circular],
                                                  },
                                                  "host": [Circular],
                                                },
                                                "policyDocument": Object {
                                                  "Statement": Array [
                                                    Object {
                                                      "Action": "ec2:DescribeInstances",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    Object {
                                                      "Action": "ec2:StartInstances",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.81]}",
                                                "rawOverrides": Object {},
                                                "roles": Array [
                                                  "#{Token[TOKEN.82]}",
                                                ],
                                                "stack": [Circular],
                                                "users": Array [
                                                  "#{Token[TOKEN.83]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): Object {
                                                  "dependencyRoots": Array [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": Object {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": Array [],
                                            "_validations": Array [],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "invokedAspects": Array [],
                                            "scope": [Circular],
                                          },
                                          "host": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.81]}",
                                        "referenceTaken": false,
                                        "roles": Array [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": Array [],
                                        Symbol(@aws-cdk/core.DependableTrait): Object {
                                          "dependencyRoots": Array [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "defaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.81]}",
                                    "_policyName": "\${Token[TOKEN.81]}",
                                    "document": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": Object {
                                      "account": "\${Token[AWS.AccountId.0]}",
                                      "region": "\${Token[AWS.Region.4]}",
                                    },
                                    "force": false,
                                    "groups": Array [],
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": Object {
                                              "groups": Array [
                                                "#{Token[TOKEN.84]}",
                                              ],
                                              "policyDocument": Object {
                                                "Statement": Array [
                                                  Object {
                                                    "Action": "ec2:DescribeInstances",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  Object {
                                                    "Action": "ec2:StartInstances",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.81]}",
                                              "roles": Array [
                                                "#{Token[TOKEN.82]}",
                                              ],
                                              "users": Array [
                                                "#{Token[TOKEN.83]}",
                                              ],
                                            },
                                            "cfnOptions": Object {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": Array [
                                              "#{Token[TOKEN.84]}",
                                            ],
                                            "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                            "node": ConstructNode {
                                              "_actualNode": Node {
                                                "_aspects": Array [],
                                                "_children": Object {},
                                                "_context": Object {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": Array [
                                                  Object {
                                                    "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                    "trace": Array [
                                                      "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                      "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                      "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                      "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                      "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                      "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                                      "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                      "new Promise (<anonymous>)",
                                                      "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                      "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                    ],
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": Array [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "invokedAspects": Array [],
                                                "scope": [Circular],
                                              },
                                              "host": [Circular],
                                            },
                                            "policyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": "ec2:DescribeInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                Object {
                                                  "Action": "ec2:StartInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.81]}",
                                            "rawOverrides": Object {},
                                            "roles": Array [
                                              "#{Token[TOKEN.82]}",
                                            ],
                                            "stack": [Circular],
                                            "users": Array [
                                              "#{Token[TOKEN.83]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): Object {
                                              "dependencyRoots": Array [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.81]}",
                                    "referenceTaken": false,
                                    "roles": Array [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": Array [],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.0]}",
                                    "region": "\${Token[AWS.Region.4]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "inlinePolicies": Object {},
                                  "managedPolicies": Array [
                                    AwsManagedPolicy {
                                      "managedPolicyArn": "\${Token[TOKEN.55]}",
                                    },
                                  ],
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {
                                        "DefaultPolicy": Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.81]}",
                                          "_policyName": "\${Token[TOKEN.81]}",
                                          "document": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "ec2:DescribeInstances",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              Object {
                                                "Action": "ec2:StartInstances",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": Object {
                                            "account": "\${Token[AWS.AccountId.0]}",
                                            "region": "\${Token[AWS.Region.4]}",
                                          },
                                          "force": false,
                                          "groups": Array [],
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {
                                                "Resource": CfnPolicyConditional {
                                                  "_cfnProperties": Object {
                                                    "groups": Array [
                                                      "#{Token[TOKEN.84]}",
                                                    ],
                                                    "policyDocument": Object {
                                                      "Statement": Array [
                                                        Object {
                                                          "Action": "ec2:DescribeInstances",
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        Object {
                                                          "Action": "ec2:StartInstances",
                                                          "Effect": "Allow",
                                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                        },
                                                      ],
                                                      "Version": "2012-10-17",
                                                    },
                                                    "policyName": "\${Token[TOKEN.81]}",
                                                    "roles": Array [
                                                      "#{Token[TOKEN.82]}",
                                                    ],
                                                    "users": Array [
                                                      "#{Token[TOKEN.83]}",
                                                    ],
                                                  },
                                                  "cfnOptions": Object {},
                                                  "cfnResourceType": "AWS::IAM::Policy",
                                                  "dependsOn": Set {},
                                                  "groups": Array [
                                                    "#{Token[TOKEN.84]}",
                                                  ],
                                                  "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                  "node": ConstructNode {
                                                    "_actualNode": Node {
                                                      "_aspects": Array [],
                                                      "_children": Object {},
                                                      "_context": Object {},
                                                      "_dependencies": Set {},
                                                      "_locked": false,
                                                      "_metadata": Array [
                                                        Object {
                                                          "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                          "trace": Array [
                                                            "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                            "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                            "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                            "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                                            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                            "new Promise (<anonymous>)",
                                                            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                          ],
                                                          "type": "aws:cdk:logicalId",
                                                        },
                                                      ],
                                                      "_validations": Array [],
                                                      "host": [Circular],
                                                      "id": "Resource",
                                                      "invokedAspects": Array [],
                                                      "scope": [Circular],
                                                    },
                                                    "host": [Circular],
                                                  },
                                                  "policyDocument": Object {
                                                    "Statement": Array [
                                                      Object {
                                                        "Action": "ec2:DescribeInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      Object {
                                                        "Action": "ec2:StartInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.81]}",
                                                  "rawOverrides": Object {},
                                                  "roles": Array [
                                                    "#{Token[TOKEN.82]}",
                                                  ],
                                                  "stack": [Circular],
                                                  "users": Array [
                                                    "#{Token[TOKEN.83]}",
                                                  ],
                                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                                    "dependencyRoots": Array [
                                                      [Circular],
                                                    ],
                                                  },
                                                },
                                              },
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "DefaultPolicy",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.81]}",
                                          "referenceTaken": false,
                                          "roles": Array [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": Array [],
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "Resource": CfnRole {
                                          "_cfnProperties": Object {
                                            "assumeRolePolicyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": "sts:AssumeRole",
                                                  "Effect": "Allow",
                                                  "Principal": Object {
                                                    "Service": "\${Token[lambda.amazonaws.com.57]}",
                                                  },
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "description": undefined,
                                            "managedPolicyArns": Array [
                                              "#{Token[TOKEN.58]}",
                                            ],
                                            "maxSessionDuration": undefined,
                                            "path": undefined,
                                            "permissionsBoundary": undefined,
                                            "policies": undefined,
                                            "roleName": "\${Token[TOKEN.56]}",
                                          },
                                          "assumeRolePolicyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": Object {
                                                  "Service": "\${Token[lambda.amazonaws.com.57]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "attrArn": "\${Token[TOKEN.60]}",
                                          "attrRoleId": "\${Token[TOKEN.61]}",
                                          "cfnOptions": Object {},
                                          "cfnResourceType": "AWS::IAM::Role",
                                          "dependsOn": Set {},
                                          "description": undefined,
                                          "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.59]}",
                                          "managedPolicyArns": Array [
                                            "#{Token[TOKEN.58]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {},
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [
                                                Object {
                                                  "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.59]}",
                                                  "trace": Array [
                                                    "new Role (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:327:18)",
                                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:544:31)",
                                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                    "new Promise (<anonymous>)",
                                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                  ],
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "rawOverrides": Object {},
                                          "roleName": "\${Token[TOKEN.56]}",
                                          "stack": [Circular],
                                          "tags": TagManager {
                                            "initialTagPriority": 50,
                                            "priorities": Map {},
                                            "resourceTypeName": "AWS::IAM::Role",
                                            "tagFormatter": StandardFormatter {},
                                            "tagPropertyName": "tags",
                                            "tags": Map {},
                                          },
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "ServiceRole",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "permissionsBoundary": undefined,
                                  "physicalName": "\${Token[TOKEN.56]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": Object {},
                                    "principalJson": Object {
                                      "AWS": Array [
                                        "\${Token[TOKEN.62]}",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.0]}",
                                  "roleArn": "\${Token[TOKEN.62]}",
                                  "roleId": "\${Token[TOKEN.61]}",
                                  "roleName": "\${Token[TOKEN.64]}",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.wakeywakey.handler.Resource.LogicalID.76]}",
                                  "trace": Array [
                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:600:35)",
                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "packageType": undefined,
                          "rawOverrides": Object {},
                          "reservedConcurrentExecutions": undefined,
                          "role": "\${Token[TOKEN.62]}",
                          "runtime": "nodejs12.x",
                          "stack": [Circular],
                          "tags": TagManager {
                            "initialTagPriority": 50,
                            "priorities": Map {},
                            "resourceTypeName": "AWS::Lambda::Function",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          "timeout": undefined,
                          "tracingConfig": undefined,
                          "vpcConfig": undefined,
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "ServiceRole": Role {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": Object {
                            "Statement": Array [
                              Object {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": Object {
                                  "Service": "\${Token[lambda.amazonaws.com.57]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": Array [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.81]}",
                                "_policyName": "\${Token[TOKEN.81]}",
                                "document": Object {
                                  "Statement": Array [
                                    Object {
                                      "Action": "ec2:DescribeInstances",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    Object {
                                      "Action": "ec2:StartInstances",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": Object {
                                  "account": "\${Token[AWS.AccountId.0]}",
                                  "region": "\${Token[AWS.Region.4]}",
                                },
                                "force": false,
                                "groups": Array [],
                                "node": ConstructNode {
                                  "_actualNode": Node {
                                    "_aspects": Array [],
                                    "_children": Object {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": Object {
                                          "groups": Array [
                                            "#{Token[TOKEN.84]}",
                                          ],
                                          "policyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "ec2:DescribeInstances",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              Object {
                                                "Action": "ec2:StartInstances",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.81]}",
                                          "roles": Array [
                                            "#{Token[TOKEN.82]}",
                                          ],
                                          "users": Array [
                                            "#{Token[TOKEN.83]}",
                                          ],
                                        },
                                        "cfnOptions": Object {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": Array [
                                          "#{Token[TOKEN.84]}",
                                        ],
                                        "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                        "node": ConstructNode {
                                          "_actualNode": Node {
                                            "_aspects": Array [],
                                            "_children": Object {},
                                            "_context": Object {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": Array [
                                              Object {
                                                "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                "trace": Array [
                                                  "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                  "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                  "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                  "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                  "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                  "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                                  "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                  "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                  "new Promise (<anonymous>)",
                                                  "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                  "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                  "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                ],
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": Array [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "invokedAspects": Array [],
                                            "scope": [Circular],
                                          },
                                          "host": [Circular],
                                        },
                                        "policyDocument": Object {
                                          "Statement": Array [
                                            Object {
                                              "Action": "ec2:DescribeInstances",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            Object {
                                              "Action": "ec2:StartInstances",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.81]}",
                                        "rawOverrides": Object {},
                                        "roles": Array [
                                          "#{Token[TOKEN.82]}",
                                        ],
                                        "stack": [Circular],
                                        "users": Array [
                                          "#{Token[TOKEN.83]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): Object {
                                          "dependencyRoots": Array [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": Object {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": Array [],
                                    "_validations": Array [],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "invokedAspects": Array [],
                                    "scope": [Circular],
                                  },
                                  "host": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.81]}",
                                "referenceTaken": false,
                                "roles": Array [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": Array [],
                                Symbol(@aws-cdk/core.DependableTrait): Object {
                                  "dependencyRoots": Array [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.81]}",
                            "_policyName": "\${Token[TOKEN.81]}",
                            "document": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "ec2:DescribeInstances",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                Object {
                                  "Action": "ec2:StartInstances",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.0]}",
                              "region": "\${Token[AWS.Region.4]}",
                            },
                            "force": false,
                            "groups": Array [],
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": Object {
                                      "groups": Array [
                                        "#{Token[TOKEN.84]}",
                                      ],
                                      "policyDocument": Object {
                                        "Statement": Array [
                                          Object {
                                            "Action": "ec2:DescribeInstances",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          Object {
                                            "Action": "ec2:StartInstances",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.81]}",
                                      "roles": Array [
                                        "#{Token[TOKEN.82]}",
                                      ],
                                      "users": Array [
                                        "#{Token[TOKEN.83]}",
                                      ],
                                    },
                                    "cfnOptions": Object {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": Array [
                                      "#{Token[TOKEN.84]}",
                                    ],
                                    "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {},
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [
                                          Object {
                                            "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                            "trace": Array [
                                              "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                              "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                              "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                              "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                              "new Promise (<anonymous>)",
                                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                            ],
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.81]}",
                                    "rawOverrides": Object {},
                                    "roles": Array [
                                      "#{Token[TOKEN.82]}",
                                    ],
                                    "stack": [Circular],
                                    "users": Array [
                                      "#{Token[TOKEN.83]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.81]}",
                            "referenceTaken": false,
                            "roles": Array [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": Array [],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.0]}",
                            "region": "\${Token[AWS.Region.4]}",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": Object {},
                          "managedPolicies": Array [
                            AwsManagedPolicy {
                              "managedPolicyArn": "\${Token[TOKEN.55]}",
                            },
                          ],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.81]}",
                                  "_policyName": "\${Token[TOKEN.81]}",
                                  "document": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "ec2:DescribeInstances",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      Object {
                                        "Action": "ec2:StartInstances",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.0]}",
                                    "region": "\${Token[AWS.Region.4]}",
                                  },
                                  "force": false,
                                  "groups": Array [],
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": Object {
                                            "groups": Array [
                                              "#{Token[TOKEN.84]}",
                                            ],
                                            "policyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": "ec2:DescribeInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                Object {
                                                  "Action": "ec2:StartInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.81]}",
                                            "roles": Array [
                                              "#{Token[TOKEN.82]}",
                                            ],
                                            "users": Array [
                                              "#{Token[TOKEN.83]}",
                                            ],
                                          },
                                          "cfnOptions": Object {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": Array [
                                            "#{Token[TOKEN.84]}",
                                          ],
                                          "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {},
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [
                                                Object {
                                                  "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                  "trace": Array [
                                                    "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                    "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                    "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                    "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                    "new Promise (<anonymous>)",
                                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                  ],
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "policyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "ec2:DescribeInstances",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              Object {
                                                "Action": "ec2:StartInstances",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.81]}",
                                          "rawOverrides": Object {},
                                          "roles": Array [
                                            "#{Token[TOKEN.82]}",
                                          ],
                                          "stack": [Circular],
                                          "users": Array [
                                            "#{Token[TOKEN.83]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.81]}",
                                  "referenceTaken": false,
                                  "roles": Array [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": Array [],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": Object {
                                    "assumeRolePolicyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": Object {
                                            "Service": "\${Token[lambda.amazonaws.com.57]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": undefined,
                                    "managedPolicyArns": Array [
                                      "#{Token[TOKEN.58]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "\${Token[TOKEN.56]}",
                                  },
                                  "assumeRolePolicyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": Object {
                                          "Service": "\${Token[lambda.amazonaws.com.57]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.60]}",
                                  "attrRoleId": "\${Token[TOKEN.61]}",
                                  "cfnOptions": Object {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.59]}",
                                  "managedPolicyArns": Array [
                                    "#{Token[TOKEN.58]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [
                                        Object {
                                          "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.59]}",
                                          "trace": Array [
                                            "new Role (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:327:18)",
                                            "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:544:31)",
                                            "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                            "new Promise (<anonymous>)",
                                            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                          ],
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": Object {},
                                  "roleName": "\${Token[TOKEN.56]}",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "initialTagPriority": 50,
                                    "priorities": Map {},
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "ServiceRole",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "\${Token[TOKEN.56]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": Object {},
                            "principalJson": Object {
                              "AWS": Array [
                                "\${Token[TOKEN.62]}",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.0]}",
                          "roleArn": "\${Token[TOKEN.62]}",
                          "roleId": "\${Token[TOKEN.61]}",
                          "roleName": "\${Token[TOKEN.64]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "handler",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "permissionsNode": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Code": Asset {
                          "assetHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                          "assetPath": "asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                          "bucket": Import {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "autoCreatePolicy": false,
                            "bucketArn": "arn:\${Token[AWS.Partition.3]}:s3:::\${Token[TOKEN.68]}",
                            "bucketDomainName": "\${Token[TOKEN.68]}.s3.\${Token[AWS.URLSuffix.1]}",
                            "bucketDualStackDomainName": "\${Token[TOKEN.68]}.s3.dualstack.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "bucketName": "\${Token[TOKEN.68]}",
                            "bucketRegionalDomainName": "\${Token[TOKEN.68]}.s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "bucketWebsiteDomainName": "\${Token[TOKEN.68]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "bucketWebsiteNewUrlFormat": false,
                            "bucketWebsiteUrl": "http://\${Token[TOKEN.68]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "disallowPublicAccess": false,
                            "encryptionKey": undefined,
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.0]}",
                              "region": "\${Token[AWS.Region.4]}",
                            },
                            "isWebsite": false,
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "AssetBucket",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.74]}",
                            "policy": undefined,
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "httpUrl": "https://s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}/\${Token[TOKEN.68]}/\${Token[TOKEN.71]}\${Token[TOKEN.73]}",
                          "isFile": false,
                          "isZipArchive": true,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "AssetBucket": Import {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "autoCreatePolicy": false,
                                  "bucketArn": "arn:\${Token[AWS.Partition.3]}:s3:::\${Token[TOKEN.68]}",
                                  "bucketDomainName": "\${Token[TOKEN.68]}.s3.\${Token[AWS.URLSuffix.1]}",
                                  "bucketDualStackDomainName": "\${Token[TOKEN.68]}.s3.dualstack.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "bucketName": "\${Token[TOKEN.68]}",
                                  "bucketRegionalDomainName": "\${Token[TOKEN.68]}.s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "bucketWebsiteDomainName": "\${Token[TOKEN.68]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "bucketWebsiteNewUrlFormat": false,
                                  "bucketWebsiteUrl": "http://\${Token[TOKEN.68]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "disallowPublicAccess": false,
                                  "encryptionKey": undefined,
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.0]}",
                                    "region": "\${Token[AWS.Region.4]}",
                                  },
                                  "isWebsite": false,
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "AssetBucket",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.74]}",
                                  "policy": undefined,
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Stage": AssetStaging {
                                  "absoluteStagedPath": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.outANyb1D/asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                                  "assetHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                                  "assetOutdir": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.outANyb1D",
                                  "cacheKey": "74c540905ce7943fc370c1fcdaf099942d3cea0803bd271a3000be3f159e2a62",
                                  "customSourceFingerprint": undefined,
                                  "fingerprintOptions": Object {
                                    "assetHash": undefined,
                                    "assetHashType": "output",
                                    "bundling": Bundling {
                                      "command": Array [
                                        "bash",
                                        "-c",
                                        "npx esbuild --bundle /asset-input/src/wakeywakey.handler.js --target=node12 --platform=node --outfile=/asset-output/index.js --external:aws-sdk",
                                      ],
                                      "environment": undefined,
                                      "externals": Array [
                                        "aws-sdk",
                                      ],
                                      "image": "dummy",
                                      "local": Object {
                                        "tryBundle": [Function],
                                      },
                                      "props": Object {
                                        "depsLockFilePath": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/yarn.lock",
                                        "entry": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.handler.js",
                                        "runtime": Runtime {
                                          "bundlingDockerImage": "amazon/aws-sam-cli-build-image-nodejs12.x",
                                          "family": 0,
                                          "name": "nodejs12.x",
                                          "supportsInlineCode": true,
                                        },
                                      },
                                      "relativeEntryPath": "src/wakeywakey.handler.js",
                                    },
                                    "follow": undefined,
                                    "path": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey",
                                    "sourcePath": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey",
                                  },
                                  "hashType": "output",
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Stage",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "sourcePath": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey",
                                  "stagedPath": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.outANyb1D/asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Code",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "s3BucketName": "\${Token[TOKEN.68]}",
                          "s3ObjectKey": "\${Token[TOKEN.71]}\${Token[TOKEN.73]}",
                          "s3ObjectUrl": "s3://\${Token[TOKEN.68]}/\${Token[TOKEN.71]}\${Token[TOKEN.73]}",
                          "s3Url": "https://s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}/\${Token[TOKEN.68]}/\${Token[TOKEN.71]}\${Token[TOKEN.73]}",
                          "sourceHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnFunction {
                          "_cfnProperties": Object {
                            "code": Object {
                              "imageUri": undefined,
                              "s3Bucket": "\${Token[TOKEN.68]}",
                              "s3Key": "\${Token[TOKEN.71]}\${Token[TOKEN.73]}",
                              "s3ObjectVersion": undefined,
                              "zipFile": undefined,
                            },
                            "deadLetterConfig": undefined,
                            "description": undefined,
                            "environment": "<unresolved-lazy>",
                            "functionName": "\${Token[TOKEN.54]}",
                            "handler": "index.handler",
                            "imageConfig": undefined,
                            "layers": Array [
                              "#{Token[TOKEN.75]}",
                            ],
                            "memorySize": undefined,
                            "packageType": undefined,
                            "reservedConcurrentExecutions": undefined,
                            "role": "\${Token[TOKEN.62]}",
                            "runtime": "nodejs12.x",
                            "timeout": undefined,
                            "tracingConfig": undefined,
                            "vpcConfig": undefined,
                          },
                          "attrArn": "\${Token[TOKEN.77]}",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Function",
                          "code": Object {
                            "imageUri": undefined,
                            "s3Bucket": "\${Token[TOKEN.68]}",
                            "s3Key": "\${Token[TOKEN.71]}\${Token[TOKEN.73]}",
                            "s3ObjectVersion": undefined,
                            "zipFile": undefined,
                          },
                          "codeSigningConfigArn": undefined,
                          "deadLetterConfig": undefined,
                          "dependsOn": Set {},
                          "description": undefined,
                          "environment": "<unresolved-lazy>",
                          "fileSystemConfigs": undefined,
                          "functionName": "\${Token[TOKEN.54]}",
                          "handler": "index.handler",
                          "imageConfig": undefined,
                          "kmsKeyArn": undefined,
                          "layers": Array [
                            "#{Token[TOKEN.75]}",
                          ],
                          "logicalId": "\${Token[test-stack.wakeywakey.handler.Resource.LogicalID.76]}",
                          "memorySize": undefined,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {
                                Role {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "assumeRolePolicy": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": Object {
                                          "Service": "\${Token[lambda.amazonaws.com.57]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": Array [
                                      Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.81]}",
                                        "_policyName": "\${Token[TOKEN.81]}",
                                        "document": Object {
                                          "Statement": Array [
                                            Object {
                                              "Action": "ec2:DescribeInstances",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            Object {
                                              "Action": "ec2:StartInstances",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": Object {
                                          "account": "\${Token[AWS.AccountId.0]}",
                                          "region": "\${Token[AWS.Region.4]}",
                                        },
                                        "force": false,
                                        "groups": Array [],
                                        "node": ConstructNode {
                                          "_actualNode": Node {
                                            "_aspects": Array [],
                                            "_children": Object {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": Object {
                                                  "groups": Array [
                                                    "#{Token[TOKEN.84]}",
                                                  ],
                                                  "policyDocument": Object {
                                                    "Statement": Array [
                                                      Object {
                                                        "Action": "ec2:DescribeInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      Object {
                                                        "Action": "ec2:StartInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.81]}",
                                                  "roles": Array [
                                                    "#{Token[TOKEN.82]}",
                                                  ],
                                                  "users": Array [
                                                    "#{Token[TOKEN.83]}",
                                                  ],
                                                },
                                                "cfnOptions": Object {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": Array [
                                                  "#{Token[TOKEN.84]}",
                                                ],
                                                "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                "node": ConstructNode {
                                                  "_actualNode": Node {
                                                    "_aspects": Array [],
                                                    "_children": Object {},
                                                    "_context": Object {},
                                                    "_dependencies": Set {},
                                                    "_locked": false,
                                                    "_metadata": Array [
                                                      Object {
                                                        "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                        "trace": Array [
                                                          "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                          "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                          "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                          "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                          "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                          "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                                          "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                          "new Promise (<anonymous>)",
                                                          "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                          "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                        ],
                                                        "type": "aws:cdk:logicalId",
                                                      },
                                                    ],
                                                    "_validations": Array [],
                                                    "host": [Circular],
                                                    "id": "Resource",
                                                    "invokedAspects": Array [],
                                                    "scope": [Circular],
                                                  },
                                                  "host": [Circular],
                                                },
                                                "policyDocument": Object {
                                                  "Statement": Array [
                                                    Object {
                                                      "Action": "ec2:DescribeInstances",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    Object {
                                                      "Action": "ec2:StartInstances",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.81]}",
                                                "rawOverrides": Object {},
                                                "roles": Array [
                                                  "#{Token[TOKEN.82]}",
                                                ],
                                                "stack": [Circular],
                                                "users": Array [
                                                  "#{Token[TOKEN.83]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): Object {
                                                  "dependencyRoots": Array [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": Object {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": Array [],
                                            "_validations": Array [],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "invokedAspects": Array [],
                                            "scope": [Circular],
                                          },
                                          "host": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.81]}",
                                        "referenceTaken": false,
                                        "roles": Array [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": Array [],
                                        Symbol(@aws-cdk/core.DependableTrait): Object {
                                          "dependencyRoots": Array [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "defaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.81]}",
                                    "_policyName": "\${Token[TOKEN.81]}",
                                    "document": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": Object {
                                      "account": "\${Token[AWS.AccountId.0]}",
                                      "region": "\${Token[AWS.Region.4]}",
                                    },
                                    "force": false,
                                    "groups": Array [],
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": Object {
                                              "groups": Array [
                                                "#{Token[TOKEN.84]}",
                                              ],
                                              "policyDocument": Object {
                                                "Statement": Array [
                                                  Object {
                                                    "Action": "ec2:DescribeInstances",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  Object {
                                                    "Action": "ec2:StartInstances",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.81]}",
                                              "roles": Array [
                                                "#{Token[TOKEN.82]}",
                                              ],
                                              "users": Array [
                                                "#{Token[TOKEN.83]}",
                                              ],
                                            },
                                            "cfnOptions": Object {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": Array [
                                              "#{Token[TOKEN.84]}",
                                            ],
                                            "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                            "node": ConstructNode {
                                              "_actualNode": Node {
                                                "_aspects": Array [],
                                                "_children": Object {},
                                                "_context": Object {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": Array [
                                                  Object {
                                                    "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                    "trace": Array [
                                                      "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                      "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                      "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                      "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                      "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                      "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                                      "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                      "new Promise (<anonymous>)",
                                                      "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                      "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                    ],
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": Array [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "invokedAspects": Array [],
                                                "scope": [Circular],
                                              },
                                              "host": [Circular],
                                            },
                                            "policyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": "ec2:DescribeInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                Object {
                                                  "Action": "ec2:StartInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.81]}",
                                            "rawOverrides": Object {},
                                            "roles": Array [
                                              "#{Token[TOKEN.82]}",
                                            ],
                                            "stack": [Circular],
                                            "users": Array [
                                              "#{Token[TOKEN.83]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): Object {
                                              "dependencyRoots": Array [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.81]}",
                                    "referenceTaken": false,
                                    "roles": Array [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": Array [],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.0]}",
                                    "region": "\${Token[AWS.Region.4]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "inlinePolicies": Object {},
                                  "managedPolicies": Array [
                                    AwsManagedPolicy {
                                      "managedPolicyArn": "\${Token[TOKEN.55]}",
                                    },
                                  ],
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {
                                        "DefaultPolicy": Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.81]}",
                                          "_policyName": "\${Token[TOKEN.81]}",
                                          "document": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "ec2:DescribeInstances",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              Object {
                                                "Action": "ec2:StartInstances",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": Object {
                                            "account": "\${Token[AWS.AccountId.0]}",
                                            "region": "\${Token[AWS.Region.4]}",
                                          },
                                          "force": false,
                                          "groups": Array [],
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {
                                                "Resource": CfnPolicyConditional {
                                                  "_cfnProperties": Object {
                                                    "groups": Array [
                                                      "#{Token[TOKEN.84]}",
                                                    ],
                                                    "policyDocument": Object {
                                                      "Statement": Array [
                                                        Object {
                                                          "Action": "ec2:DescribeInstances",
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        Object {
                                                          "Action": "ec2:StartInstances",
                                                          "Effect": "Allow",
                                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                        },
                                                      ],
                                                      "Version": "2012-10-17",
                                                    },
                                                    "policyName": "\${Token[TOKEN.81]}",
                                                    "roles": Array [
                                                      "#{Token[TOKEN.82]}",
                                                    ],
                                                    "users": Array [
                                                      "#{Token[TOKEN.83]}",
                                                    ],
                                                  },
                                                  "cfnOptions": Object {},
                                                  "cfnResourceType": "AWS::IAM::Policy",
                                                  "dependsOn": Set {},
                                                  "groups": Array [
                                                    "#{Token[TOKEN.84]}",
                                                  ],
                                                  "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                  "node": ConstructNode {
                                                    "_actualNode": Node {
                                                      "_aspects": Array [],
                                                      "_children": Object {},
                                                      "_context": Object {},
                                                      "_dependencies": Set {},
                                                      "_locked": false,
                                                      "_metadata": Array [
                                                        Object {
                                                          "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                          "trace": Array [
                                                            "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                            "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                            "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                            "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                                            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                            "new Promise (<anonymous>)",
                                                            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                          ],
                                                          "type": "aws:cdk:logicalId",
                                                        },
                                                      ],
                                                      "_validations": Array [],
                                                      "host": [Circular],
                                                      "id": "Resource",
                                                      "invokedAspects": Array [],
                                                      "scope": [Circular],
                                                    },
                                                    "host": [Circular],
                                                  },
                                                  "policyDocument": Object {
                                                    "Statement": Array [
                                                      Object {
                                                        "Action": "ec2:DescribeInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      Object {
                                                        "Action": "ec2:StartInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.81]}",
                                                  "rawOverrides": Object {},
                                                  "roles": Array [
                                                    "#{Token[TOKEN.82]}",
                                                  ],
                                                  "stack": [Circular],
                                                  "users": Array [
                                                    "#{Token[TOKEN.83]}",
                                                  ],
                                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                                    "dependencyRoots": Array [
                                                      [Circular],
                                                    ],
                                                  },
                                                },
                                              },
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "DefaultPolicy",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.81]}",
                                          "referenceTaken": false,
                                          "roles": Array [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": Array [],
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "Resource": CfnRole {
                                          "_cfnProperties": Object {
                                            "assumeRolePolicyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": "sts:AssumeRole",
                                                  "Effect": "Allow",
                                                  "Principal": Object {
                                                    "Service": "\${Token[lambda.amazonaws.com.57]}",
                                                  },
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "description": undefined,
                                            "managedPolicyArns": Array [
                                              "#{Token[TOKEN.58]}",
                                            ],
                                            "maxSessionDuration": undefined,
                                            "path": undefined,
                                            "permissionsBoundary": undefined,
                                            "policies": undefined,
                                            "roleName": "\${Token[TOKEN.56]}",
                                          },
                                          "assumeRolePolicyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": Object {
                                                  "Service": "\${Token[lambda.amazonaws.com.57]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "attrArn": "\${Token[TOKEN.60]}",
                                          "attrRoleId": "\${Token[TOKEN.61]}",
                                          "cfnOptions": Object {},
                                          "cfnResourceType": "AWS::IAM::Role",
                                          "dependsOn": Set {},
                                          "description": undefined,
                                          "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.59]}",
                                          "managedPolicyArns": Array [
                                            "#{Token[TOKEN.58]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {},
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [
                                                Object {
                                                  "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.59]}",
                                                  "trace": Array [
                                                    "new Role (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:327:18)",
                                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:544:31)",
                                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                    "new Promise (<anonymous>)",
                                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                  ],
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "rawOverrides": Object {},
                                          "roleName": "\${Token[TOKEN.56]}",
                                          "stack": [Circular],
                                          "tags": TagManager {
                                            "initialTagPriority": 50,
                                            "priorities": Map {},
                                            "resourceTypeName": "AWS::IAM::Role",
                                            "tagFormatter": StandardFormatter {},
                                            "tagPropertyName": "tags",
                                            "tags": Map {},
                                          },
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "ServiceRole",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "permissionsBoundary": undefined,
                                  "physicalName": "\${Token[TOKEN.56]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": Object {},
                                    "principalJson": Object {
                                      "AWS": Array [
                                        "\${Token[TOKEN.62]}",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.0]}",
                                  "roleArn": "\${Token[TOKEN.62]}",
                                  "roleId": "\${Token[TOKEN.61]}",
                                  "roleName": "\${Token[TOKEN.64]}",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.wakeywakey.handler.Resource.LogicalID.76]}",
                                  "trace": Array [
                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:600:35)",
                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "packageType": undefined,
                          "rawOverrides": Object {},
                          "reservedConcurrentExecutions": undefined,
                          "role": "\${Token[TOKEN.62]}",
                          "runtime": "nodejs12.x",
                          "stack": [Circular],
                          "tags": TagManager {
                            "initialTagPriority": 50,
                            "priorities": Map {},
                            "resourceTypeName": "AWS::Lambda::Function",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          "timeout": undefined,
                          "tracingConfig": undefined,
                          "vpcConfig": undefined,
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "ServiceRole": Role {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": Object {
                            "Statement": Array [
                              Object {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": Object {
                                  "Service": "\${Token[lambda.amazonaws.com.57]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": Array [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.81]}",
                                "_policyName": "\${Token[TOKEN.81]}",
                                "document": Object {
                                  "Statement": Array [
                                    Object {
                                      "Action": "ec2:DescribeInstances",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    Object {
                                      "Action": "ec2:StartInstances",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": Object {
                                  "account": "\${Token[AWS.AccountId.0]}",
                                  "region": "\${Token[AWS.Region.4]}",
                                },
                                "force": false,
                                "groups": Array [],
                                "node": ConstructNode {
                                  "_actualNode": Node {
                                    "_aspects": Array [],
                                    "_children": Object {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": Object {
                                          "groups": Array [
                                            "#{Token[TOKEN.84]}",
                                          ],
                                          "policyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "ec2:DescribeInstances",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              Object {
                                                "Action": "ec2:StartInstances",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.81]}",
                                          "roles": Array [
                                            "#{Token[TOKEN.82]}",
                                          ],
                                          "users": Array [
                                            "#{Token[TOKEN.83]}",
                                          ],
                                        },
                                        "cfnOptions": Object {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": Array [
                                          "#{Token[TOKEN.84]}",
                                        ],
                                        "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                        "node": ConstructNode {
                                          "_actualNode": Node {
                                            "_aspects": Array [],
                                            "_children": Object {},
                                            "_context": Object {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": Array [
                                              Object {
                                                "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                "trace": Array [
                                                  "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                  "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                  "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                  "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                  "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                  "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                                  "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                  "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                  "new Promise (<anonymous>)",
                                                  "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                  "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                  "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                ],
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": Array [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "invokedAspects": Array [],
                                            "scope": [Circular],
                                          },
                                          "host": [Circular],
                                        },
                                        "policyDocument": Object {
                                          "Statement": Array [
                                            Object {
                                              "Action": "ec2:DescribeInstances",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            Object {
                                              "Action": "ec2:StartInstances",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.81]}",
                                        "rawOverrides": Object {},
                                        "roles": Array [
                                          "#{Token[TOKEN.82]}",
                                        ],
                                        "stack": [Circular],
                                        "users": Array [
                                          "#{Token[TOKEN.83]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): Object {
                                          "dependencyRoots": Array [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": Object {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": Array [],
                                    "_validations": Array [],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "invokedAspects": Array [],
                                    "scope": [Circular],
                                  },
                                  "host": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.81]}",
                                "referenceTaken": false,
                                "roles": Array [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": Array [],
                                Symbol(@aws-cdk/core.DependableTrait): Object {
                                  "dependencyRoots": Array [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.81]}",
                            "_policyName": "\${Token[TOKEN.81]}",
                            "document": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "ec2:DescribeInstances",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                Object {
                                  "Action": "ec2:StartInstances",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.0]}",
                              "region": "\${Token[AWS.Region.4]}",
                            },
                            "force": false,
                            "groups": Array [],
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": Object {
                                      "groups": Array [
                                        "#{Token[TOKEN.84]}",
                                      ],
                                      "policyDocument": Object {
                                        "Statement": Array [
                                          Object {
                                            "Action": "ec2:DescribeInstances",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          Object {
                                            "Action": "ec2:StartInstances",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.81]}",
                                      "roles": Array [
                                        "#{Token[TOKEN.82]}",
                                      ],
                                      "users": Array [
                                        "#{Token[TOKEN.83]}",
                                      ],
                                    },
                                    "cfnOptions": Object {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": Array [
                                      "#{Token[TOKEN.84]}",
                                    ],
                                    "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {},
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [
                                          Object {
                                            "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                            "trace": Array [
                                              "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                              "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                              "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                              "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                              "new Promise (<anonymous>)",
                                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                            ],
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.81]}",
                                    "rawOverrides": Object {},
                                    "roles": Array [
                                      "#{Token[TOKEN.82]}",
                                    ],
                                    "stack": [Circular],
                                    "users": Array [
                                      "#{Token[TOKEN.83]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.81]}",
                            "referenceTaken": false,
                            "roles": Array [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": Array [],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.0]}",
                            "region": "\${Token[AWS.Region.4]}",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": Object {},
                          "managedPolicies": Array [
                            AwsManagedPolicy {
                              "managedPolicyArn": "\${Token[TOKEN.55]}",
                            },
                          ],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.81]}",
                                  "_policyName": "\${Token[TOKEN.81]}",
                                  "document": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "ec2:DescribeInstances",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      Object {
                                        "Action": "ec2:StartInstances",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.0]}",
                                    "region": "\${Token[AWS.Region.4]}",
                                  },
                                  "force": false,
                                  "groups": Array [],
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": Object {
                                            "groups": Array [
                                              "#{Token[TOKEN.84]}",
                                            ],
                                            "policyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": "ec2:DescribeInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                Object {
                                                  "Action": "ec2:StartInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.81]}",
                                            "roles": Array [
                                              "#{Token[TOKEN.82]}",
                                            ],
                                            "users": Array [
                                              "#{Token[TOKEN.83]}",
                                            ],
                                          },
                                          "cfnOptions": Object {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": Array [
                                            "#{Token[TOKEN.84]}",
                                          ],
                                          "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {},
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [
                                                Object {
                                                  "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                                  "trace": Array [
                                                    "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                    "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                    "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                    "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                    "new Promise (<anonymous>)",
                                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                  ],
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "policyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "ec2:DescribeInstances",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              Object {
                                                "Action": "ec2:StartInstances",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.81]}",
                                          "rawOverrides": Object {},
                                          "roles": Array [
                                            "#{Token[TOKEN.82]}",
                                          ],
                                          "stack": [Circular],
                                          "users": Array [
                                            "#{Token[TOKEN.83]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.81]}",
                                  "referenceTaken": false,
                                  "roles": Array [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": Array [],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": Object {
                                    "assumeRolePolicyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": Object {
                                            "Service": "\${Token[lambda.amazonaws.com.57]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": undefined,
                                    "managedPolicyArns": Array [
                                      "#{Token[TOKEN.58]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "\${Token[TOKEN.56]}",
                                  },
                                  "assumeRolePolicyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": Object {
                                          "Service": "\${Token[lambda.amazonaws.com.57]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.60]}",
                                  "attrRoleId": "\${Token[TOKEN.61]}",
                                  "cfnOptions": Object {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.59]}",
                                  "managedPolicyArns": Array [
                                    "#{Token[TOKEN.58]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [
                                        Object {
                                          "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.59]}",
                                          "trace": Array [
                                            "new Role (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:327:18)",
                                            "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:544:31)",
                                            "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                            "new Promise (<anonymous>)",
                                            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                          ],
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": Object {},
                                  "roleName": "\${Token[TOKEN.56]}",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "initialTagPriority": 50,
                                    "priorities": Map {},
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "ServiceRole",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "\${Token[TOKEN.56]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": Object {},
                            "principalJson": Object {
                              "AWS": Array [
                                "\${Token[TOKEN.62]}",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.0]}",
                          "roleArn": "\${Token[TOKEN.62]}",
                          "roleId": "\${Token[TOKEN.61]}",
                          "roleName": "\${Token[TOKEN.64]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "handler",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "physicalName": "\${Token[TOKEN.54]}",
                  "role": Role {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "assumeRoleAction": "sts:AssumeRole",
                    "assumeRolePolicy": Object {
                      "Statement": Array [
                        Object {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": Object {
                            "Service": "\${Token[lambda.amazonaws.com.57]}",
                          },
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "attachedPolicies": AttachedPolicies {
                      "policies": Array [
                        Policy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": "\${Token[TOKEN.81]}",
                          "_policyName": "\${Token[TOKEN.81]}",
                          "document": Object {
                            "Statement": Array [
                              Object {
                                "Action": "ec2:DescribeInstances",
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                              Object {
                                "Action": "ec2:StartInstances",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.0]}",
                            "region": "\${Token[AWS.Region.4]}",
                          },
                          "force": false,
                          "groups": Array [],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": Object {
                                    "groups": Array [
                                      "#{Token[TOKEN.84]}",
                                    ],
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.81]}",
                                    "roles": Array [
                                      "#{Token[TOKEN.82]}",
                                    ],
                                    "users": Array [
                                      "#{Token[TOKEN.83]}",
                                    ],
                                  },
                                  "cfnOptions": Object {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": Array [
                                    "#{Token[TOKEN.84]}",
                                  ],
                                  "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [
                                        Object {
                                          "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                          "trace": Array [
                                            "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                            "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                            "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                            "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                            "new Promise (<anonymous>)",
                                            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                          ],
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "policyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "ec2:DescribeInstances",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      Object {
                                        "Action": "ec2:StartInstances",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.81]}",
                                  "rawOverrides": Object {},
                                  "roles": Array [
                                    "#{Token[TOKEN.82]}",
                                  ],
                                  "stack": [Circular],
                                  "users": Array [
                                    "#{Token[TOKEN.83]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.81]}",
                          "referenceTaken": false,
                          "roles": Array [
                            [Circular],
                          ],
                          "stack": [Circular],
                          "users": Array [],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      ],
                    },
                    "defaultPolicy": Policy {
                      "_allowCrossEnvironment": false,
                      "_physicalName": "\${Token[TOKEN.81]}",
                      "_policyName": "\${Token[TOKEN.81]}",
                      "document": Object {
                        "Statement": Array [
                          Object {
                            "Action": "ec2:DescribeInstances",
                            "Effect": "Allow",
                            "Resource": "*",
                          },
                          Object {
                            "Action": "ec2:StartInstances",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "env": Object {
                        "account": "\${Token[AWS.AccountId.0]}",
                        "region": "\${Token[AWS.Region.4]}",
                      },
                      "force": false,
                      "groups": Array [],
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": Object {
                                "groups": Array [
                                  "#{Token[TOKEN.84]}",
                                ],
                                "policyDocument": Object {
                                  "Statement": Array [
                                    Object {
                                      "Action": "ec2:DescribeInstances",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    Object {
                                      "Action": "ec2:StartInstances",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.81]}",
                                "roles": Array [
                                  "#{Token[TOKEN.82]}",
                                ],
                                "users": Array [
                                  "#{Token[TOKEN.83]}",
                                ],
                              },
                              "cfnOptions": Object {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": Array [
                                "#{Token[TOKEN.84]}",
                              ],
                              "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                              "node": ConstructNode {
                                "_actualNode": Node {
                                  "_aspects": Array [],
                                  "_children": Object {},
                                  "_context": Object {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": Array [
                                    Object {
                                      "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                      "trace": Array [
                                        "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                        "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                        "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                        "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                        "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                        "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                        "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                        "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                        "new Promise (<anonymous>)",
                                        "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                        "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                        "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                      ],
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": Array [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "invokedAspects": Array [],
                                  "scope": [Circular],
                                },
                                "host": [Circular],
                              },
                              "policyDocument": Object {
                                "Statement": Array [
                                  Object {
                                    "Action": "ec2:DescribeInstances",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  Object {
                                    "Action": "ec2:StartInstances",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.81]}",
                              "rawOverrides": Object {},
                              "roles": Array [
                                "#{Token[TOKEN.82]}",
                              ],
                              "stack": [Circular],
                              "users": Array [
                                "#{Token[TOKEN.83]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): Object {
                                "dependencyRoots": Array [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.81]}",
                      "referenceTaken": false,
                      "roles": Array [
                        [Circular],
                      ],
                      "stack": [Circular],
                      "users": Array [],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.0]}",
                      "region": "\${Token[AWS.Region.4]}",
                    },
                    "grantPrincipal": [Circular],
                    "inlinePolicies": Object {},
                    "managedPolicies": Array [
                      AwsManagedPolicy {
                        "managedPolicyArn": "\${Token[TOKEN.55]}",
                      },
                    ],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {
                          "DefaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.81]}",
                            "_policyName": "\${Token[TOKEN.81]}",
                            "document": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "ec2:DescribeInstances",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                Object {
                                  "Action": "ec2:StartInstances",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.0]}",
                              "region": "\${Token[AWS.Region.4]}",
                            },
                            "force": false,
                            "groups": Array [],
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": Object {
                                      "groups": Array [
                                        "#{Token[TOKEN.84]}",
                                      ],
                                      "policyDocument": Object {
                                        "Statement": Array [
                                          Object {
                                            "Action": "ec2:DescribeInstances",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          Object {
                                            "Action": "ec2:StartInstances",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.81]}",
                                      "roles": Array [
                                        "#{Token[TOKEN.82]}",
                                      ],
                                      "users": Array [
                                        "#{Token[TOKEN.83]}",
                                      ],
                                    },
                                    "cfnOptions": Object {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": Array [
                                      "#{Token[TOKEN.84]}",
                                    ],
                                    "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {},
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [
                                          Object {
                                            "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.85]}",
                                            "trace": Array [
                                              "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                              "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                              "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                              "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                              "new Promise (<anonymous>)",
                                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                            ],
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/asdfasdfasdf",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.81]}",
                                    "rawOverrides": Object {},
                                    "roles": Array [
                                      "#{Token[TOKEN.82]}",
                                    ],
                                    "stack": [Circular],
                                    "users": Array [
                                      "#{Token[TOKEN.83]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.81]}",
                            "referenceTaken": false,
                            "roles": Array [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": Array [],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "Resource": CfnRole {
                            "_cfnProperties": Object {
                              "assumeRolePolicyDocument": Object {
                                "Statement": Array [
                                  Object {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": Object {
                                      "Service": "\${Token[lambda.amazonaws.com.57]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "description": undefined,
                              "managedPolicyArns": Array [
                                "#{Token[TOKEN.58]}",
                              ],
                              "maxSessionDuration": undefined,
                              "path": undefined,
                              "permissionsBoundary": undefined,
                              "policies": undefined,
                              "roleName": "\${Token[TOKEN.56]}",
                            },
                            "assumeRolePolicyDocument": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": Object {
                                    "Service": "\${Token[lambda.amazonaws.com.57]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attrArn": "\${Token[TOKEN.60]}",
                            "attrRoleId": "\${Token[TOKEN.61]}",
                            "cfnOptions": Object {},
                            "cfnResourceType": "AWS::IAM::Role",
                            "dependsOn": Set {},
                            "description": undefined,
                            "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.59]}",
                            "managedPolicyArns": Array [
                              "#{Token[TOKEN.58]}",
                            ],
                            "maxSessionDuration": undefined,
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [
                                  Object {
                                    "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.59]}",
                                    "trace": Array [
                                      "new Role (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:327:18)",
                                      "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:544:31)",
                                      "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                      "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                      "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                      "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                      "new Promise (<anonymous>)",
                                      "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                      "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                    ],
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "Resource",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "path": undefined,
                            "permissionsBoundary": undefined,
                            "policies": undefined,
                            "rawOverrides": Object {},
                            "roleName": "\${Token[TOKEN.56]}",
                            "stack": [Circular],
                            "tags": TagManager {
                              "initialTagPriority": 50,
                              "priorities": Map {},
                              "resourceTypeName": "AWS::IAM::Role",
                              "tagFormatter": StandardFormatter {},
                              "tagPropertyName": "tags",
                              "tags": Map {},
                            },
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "ServiceRole",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "permissionsBoundary": undefined,
                    "physicalName": "\${Token[TOKEN.56]}",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": Object {},
                      "principalJson": Object {
                        "AWS": Array [
                          "\${Token[TOKEN.62]}",
                        ],
                      },
                    },
                    "principalAccount": "\${Token[AWS.AccountId.0]}",
                    "roleArn": "\${Token[TOKEN.62]}",
                    "roleId": "\${Token[TOKEN.61]}",
                    "roleName": "\${Token[TOKEN.64]}",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "runtime": Runtime {
                    "bundlingDockerImage": "amazon/aws-sam-cli-build-image-nodejs12.x",
                    "family": 0,
                    "name": "nodejs12.x",
                    "supportsInlineCode": true,
                  },
                  "stack": [Circular],
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
                "rule": Rule {
                  "_allowCrossEnvironment": false,
                  "_physicalName": undefined,
                  "accountEventBusTargets": Object {},
                  "description": undefined,
                  "env": Object {
                    "account": "\${Token[AWS.AccountId.0]}",
                    "region": "\${Token[AWS.Region.4]}",
                  },
                  "eventPattern": Object {},
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "AllowEventRuleteststackwakeywakeyruleBF7CA038": CfnPermission {
                          "_cfnProperties": Object {
                            "action": "lambda:InvokeFunction",
                            "eventSourceToken": undefined,
                            "functionName": "\${Token[TOKEN.80]}",
                            "principal": "events.amazonaws.com",
                            "sourceAccount": undefined,
                            "sourceArn": "\${Token[TOKEN.89]}",
                          },
                          "action": "lambda:InvokeFunction",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Permission",
                          "dependsOn": Set {},
                          "eventSourceToken": undefined,
                          "functionName": "\${Token[TOKEN.80]}",
                          "logicalId": "\${Token[test-stack.wakeywakey.rule.AllowEventRuleteststackwakeywakeyruleBF7CA038.LogicalID.92]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.wakeywakey.rule.AllowEventRuleteststackwakeywakeyruleBF7CA038.LogicalID.92]}",
                                  "trace": Array [
                                    "NodejsFunction.addPermission (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:245:5)",
                                    "Object.addLambdaPermission (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-events-targets/lib/util.ts:40:13)",
                                    "LambdaFunction.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-events-targets/lib/lambda.ts:33:5)",
                                    "Rule.addTarget (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-events/lib/rule.ts:166:32)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:67:10)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "AllowEventRuleteststackwakeywakeyruleBF7CA038",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "principal": "events.amazonaws.com",
                          "rawOverrides": Object {},
                          "sourceAccount": undefined,
                          "sourceArn": "\${Token[TOKEN.89]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnRule {
                          "_cfnProperties": Object {
                            "description": undefined,
                            "eventBusName": undefined,
                            "eventPattern": "<unresolved-lazy>",
                            "name": "\${Token[TOKEN.86]}",
                            "scheduleExpression": "cron(0 12 * * ? *)",
                            "state": "ENABLED",
                            "targets": "<unresolved-lazy>",
                          },
                          "attrArn": "\${Token[TOKEN.88]}",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Events::Rule",
                          "dependsOn": Set {},
                          "description": undefined,
                          "eventBusName": undefined,
                          "eventPattern": "<unresolved-lazy>",
                          "logicalId": "\${Token[test-stack.wakeywakey.rule.Resource.LogicalID.87]}",
                          "name": "\${Token[TOKEN.86]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.wakeywakey.rule.Resource.LogicalID.87]}",
                                  "trace": Array [
                                    "new Rule (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-events/lib/rule.ts:130:22)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:63:18)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "rawOverrides": Object {},
                          "roleArn": undefined,
                          "scheduleExpression": "cron(0 12 * * ? *)",
                          "stack": [Circular],
                          "state": "ENABLED",
                          "targets": "<unresolved-lazy>",
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "rule",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "physicalName": "\${Token[TOKEN.86]}",
                  "ruleArn": "\${Token[TOKEN.89]}",
                  "ruleName": "\${Token[TOKEN.91]}",
                  "scheduleExpression": "cron(0 12 * * ? *)",
                  "stack": [Circular],
                  "targets": Array [
                    Object {
                      "arn": "\${Token[TOKEN.80]}",
                      "batchParameters": undefined,
                      "ecsParameters": undefined,
                      "id": "Target0",
                      "input": "\${Token[TOKEN.93]}",
                      "inputPath": undefined,
                      "inputTransformer": undefined,
                      "kinesisParameters": undefined,
                      "roleArn": undefined,
                      "runCommandParameters": undefined,
                      "sqsParameters": undefined,
                    },
                  ],
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
              },
              "_context": Object {},
              "_dependencies": Set {},
              "_locked": false,
              "_metadata": Array [],
              "_validations": Array [],
              "host": [Circular],
              "id": "wakeywakey",
              "invokedAspects": Array [],
              "scope": [Circular],
            },
            "host": [Circular],
          },
          Symbol(@aws-cdk/core.DependableTrait): Object {
            "dependencyRoots": Array [
              [Circular],
            ],
          },
        },
      },
      "_context": Object {},
      "_dependencies": Set {},
      "_locked": false,
      "_metadata": Array [
        Object {
          "data": Object {
            "artifactHashParameter": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.67]}",
            "id": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
            "packaging": "zip",
            "path": "asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
            "s3BucketParameter": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.65]}",
            "s3KeyParameter": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.66]}",
            "sourceHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
          },
          "trace": Array [
            "ConstructNode.addMetadata (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/construct-compat.ts:431:92)",
            "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:163:23)",
            "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
            "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
            "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
            "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
            "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
            "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
            "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
            "new Promise (<anonymous>)",
            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
          ],
          "type": "aws:cdk:asset",
        },
      ],
      "_validations": Array [],
      "host": [Circular],
      "id": "test-stack",
      "invokedAspects": Array [],
      "scope": App {
        "_assemblyBuilder": CloudAssemblyBuilder {
          "artifacts": Object {},
          "assetOutdir": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.outANyb1D",
          "missing": Array [],
          "outdir": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.outANyb1D",
          "parentBuilder": undefined,
        },
        "account": undefined,
        "node": ConstructNode {
          "_actualNode": Node {
            "_aspects": Array [],
            "_children": Object {
              "Tree": TreeMetadata {
                "node": ConstructNode {
                  "_actualNode": Node {
                    "_aspects": Array [],
                    "_children": Object {},
                    "_context": Object {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": Array [],
                    "_validations": Array [],
                    "host": [Circular],
                    "id": "Tree",
                    "invokedAspects": Array [],
                    "scope": [Circular],
                  },
                  "host": [Circular],
                },
                Symbol(@aws-cdk/core.DependableTrait): Object {
                  "dependencyRoots": Array [
                    [Circular],
                  ],
                },
              },
              "test-stack": [Circular],
            },
            "_context": Object {},
            "_dependencies": Set {},
            "_locked": false,
            "_metadata": Array [],
            "_validations": Array [],
            "host": [Circular],
            "id": "",
            "invokedAspects": Array [],
            "scope": undefined,
          },
          "host": [Circular],
        },
        "parentStage": undefined,
        "region": undefined,
        "stageName": "",
        Symbol(@aws-cdk/core.DependableTrait): Object {
          "dependencyRoots": Array [
            [Circular],
          ],
        },
      },
    },
    "host": [Circular],
  },
  "region": "\${Token[AWS.Region.4]}",
  "synthesizer": LegacyStackSynthesizer {
    "_assetParameters": Construct {
      "node": ConstructNode {
        "_actualNode": Node {
          "_aspects": Array [],
          "_children": Object {
            "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8": FileAssetParameters {
              "artifactHashParameter": CfnParameter {
                "_allowedPattern": undefined,
                "_allowedValues": undefined,
                "_constraintDescription": undefined,
                "_default": undefined,
                "_description": "Artifact hash for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                "_maxLength": undefined,
                "_maxValue": undefined,
                "_minLength": undefined,
                "_minValue": undefined,
                "_noEcho": undefined,
                "_type": "String",
                "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.67]}",
                "node": ConstructNode {
                  "_actualNode": Node {
                    "_aspects": Array [],
                    "_children": Object {},
                    "_context": Object {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": Array [
                      Object {
                        "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.67]}",
                        "trace": Array [
                          "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:26:34)",
                          "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                          "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                          "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                          "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                          "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                          "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                          "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                          "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                          "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                          "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                          "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                          "new Promise (<anonymous>)",
                          "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                          "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                        ],
                        "type": "aws:cdk:logicalId",
                      },
                    ],
                    "_validations": Array [],
                    "host": [Circular],
                    "id": "ArtifactHash",
                    "invokedAspects": Array [],
                    "scope": [Circular],
                  },
                  "host": [Circular],
                },
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): Object {
                  "dependencyRoots": Array [
                    [Circular],
                  ],
                },
              },
              "bucketNameParameter": CfnParameter {
                "_allowedPattern": undefined,
                "_allowedValues": undefined,
                "_constraintDescription": undefined,
                "_default": undefined,
                "_description": "S3 bucket for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                "_maxLength": undefined,
                "_maxValue": undefined,
                "_minLength": undefined,
                "_minValue": undefined,
                "_noEcho": undefined,
                "_type": "String",
                "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.65]}",
                "node": ConstructNode {
                  "_actualNode": Node {
                    "_aspects": Array [],
                    "_children": Object {},
                    "_context": Object {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": Array [
                      Object {
                        "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.65]}",
                        "trace": Array [
                          "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:16:32)",
                          "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                          "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                          "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                          "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                          "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                          "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                          "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                          "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                          "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                          "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                          "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                          "new Promise (<anonymous>)",
                          "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                          "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                        ],
                        "type": "aws:cdk:logicalId",
                      },
                    ],
                    "_validations": Array [],
                    "host": [Circular],
                    "id": "S3Bucket",
                    "invokedAspects": Array [],
                    "scope": [Circular],
                  },
                  "host": [Circular],
                },
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): Object {
                  "dependencyRoots": Array [
                    [Circular],
                  ],
                },
              },
              "node": ConstructNode {
                "_actualNode": Node {
                  "_aspects": Array [],
                  "_children": Object {
                    "ArtifactHash": CfnParameter {
                      "_allowedPattern": undefined,
                      "_allowedValues": undefined,
                      "_constraintDescription": undefined,
                      "_default": undefined,
                      "_description": "Artifact hash for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                      "_maxLength": undefined,
                      "_maxValue": undefined,
                      "_minLength": undefined,
                      "_minValue": undefined,
                      "_noEcho": undefined,
                      "_type": "String",
                      "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.67]}",
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {},
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [
                            Object {
                              "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.67]}",
                              "trace": Array [
                                "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:26:34)",
                                "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                                "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                                "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                                "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                                "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                                "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                                "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                                "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                "new Promise (<anonymous>)",
                                "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                              ],
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "ArtifactHash",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                    "S3Bucket": CfnParameter {
                      "_allowedPattern": undefined,
                      "_allowedValues": undefined,
                      "_constraintDescription": undefined,
                      "_default": undefined,
                      "_description": "S3 bucket for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                      "_maxLength": undefined,
                      "_maxValue": undefined,
                      "_minLength": undefined,
                      "_minValue": undefined,
                      "_noEcho": undefined,
                      "_type": "String",
                      "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.65]}",
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {},
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [
                            Object {
                              "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.65]}",
                              "trace": Array [
                                "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:16:32)",
                                "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                                "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                                "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                                "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                                "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                                "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                                "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                                "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                "new Promise (<anonymous>)",
                                "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                              ],
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "S3Bucket",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                    "S3VersionKey": CfnParameter {
                      "_allowedPattern": undefined,
                      "_allowedValues": undefined,
                      "_constraintDescription": undefined,
                      "_default": undefined,
                      "_description": "S3 key for asset version \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                      "_maxLength": undefined,
                      "_maxValue": undefined,
                      "_minLength": undefined,
                      "_minValue": undefined,
                      "_noEcho": undefined,
                      "_type": "String",
                      "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.66]}",
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {},
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [
                            Object {
                              "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.66]}",
                              "trace": Array [
                                "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:21:31)",
                                "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                                "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                                "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                                "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                                "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                                "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                                "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                                "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                                "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                "new Promise (<anonymous>)",
                                "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                              ],
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "S3VersionKey",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": Object {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": Array [],
                  "_validations": Array [],
                  "host": [Circular],
                  "id": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                  "invokedAspects": Array [],
                  "scope": [Circular],
                },
                "host": [Circular],
              },
              "objectKeyParameter": CfnParameter {
                "_allowedPattern": undefined,
                "_allowedValues": undefined,
                "_constraintDescription": undefined,
                "_default": undefined,
                "_description": "S3 key for asset version \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                "_maxLength": undefined,
                "_maxValue": undefined,
                "_minLength": undefined,
                "_minValue": undefined,
                "_noEcho": undefined,
                "_type": "String",
                "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.66]}",
                "node": ConstructNode {
                  "_actualNode": Node {
                    "_aspects": Array [],
                    "_children": Object {},
                    "_context": Object {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": Array [
                      Object {
                        "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.66]}",
                        "trace": Array [
                          "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:21:31)",
                          "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                          "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                          "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                          "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                          "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                          "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                          "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                          "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                          "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                          "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:8:3)",
                          "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                          "new Promise (<anonymous>)",
                          "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                          "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                        ],
                        "type": "aws:cdk:logicalId",
                      },
                    ],
                    "_validations": Array [],
                    "host": [Circular],
                    "id": "S3VersionKey",
                    "invokedAspects": Array [],
                    "scope": [Circular],
                  },
                  "host": [Circular],
                },
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): Object {
                  "dependencyRoots": Array [
                    [Circular],
                  ],
                },
              },
              Symbol(@aws-cdk/core.DependableTrait): Object {
                "dependencyRoots": Array [
                  [Circular],
                ],
              },
            },
          },
          "_context": Object {},
          "_dependencies": Set {},
          "_locked": false,
          "_metadata": Array [],
          "_validations": Array [],
          "host": [Circular],
          "id": "AssetParameters",
          "invokedAspects": Array [],
          "scope": [Circular],
        },
        "host": [Circular],
      },
      Symbol(@aws-cdk/core.DependableTrait): Object {
        "dependencyRoots": Array [
          [Circular],
        ],
      },
    },
    "addedImageAssets": Set {},
    "cycle": false,
    "stack": [Circular],
  },
  "tags": TagManager {
    "initialTagPriority": 50,
    "priorities": Map {},
    "resourceTypeName": "aws:cdk:stack",
    "tagFormatter": KeyValueFormatter {},
    "tagPropertyName": "tags",
    "tags": Map {},
  },
  "templateFile": "test-stack.template.json",
  "templateOptions": Object {},
  "terminationProtection": undefined,
  Symbol(@aws-cdk/core.DependableTrait): Object {
    "dependencyRoots": Array [
      [Circular],
    ],
  },
}
`;

exports[`overriden cronoptions 1`] = `
Stack {
  "_logicalIds": LogicalIDs {
    "renames": Object {},
    "reverse": Object {},
  },
  "_missingContext": Array [],
  "_stackDependencies": Object {},
  "_stackName": "test-stack",
  "_versionReportingEnabled": undefined,
  "account": "\${Token[AWS.AccountId.0]}",
  "artifactId": "test-stack",
  "environment": "aws://unknown-account/unknown-region",
  "node": ConstructNode {
    "_actualNode": Node {
      "_aspects": Array [],
      "_children": Object {
        "AssetParameters": Construct {
          "node": ConstructNode {
            "_actualNode": Node {
              "_aspects": Array [],
              "_children": Object {
                "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8": FileAssetParameters {
                  "artifactHashParameter": CfnParameter {
                    "_allowedPattern": undefined,
                    "_allowedValues": undefined,
                    "_constraintDescription": undefined,
                    "_default": undefined,
                    "_description": "Artifact hash for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                    "_maxLength": undefined,
                    "_maxValue": undefined,
                    "_minLength": undefined,
                    "_minValue": undefined,
                    "_noEcho": undefined,
                    "_type": "String",
                    "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.107]}",
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.107]}",
                            "trace": Array [
                              "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:26:34)",
                              "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                              "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                              "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                              "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                              "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                              "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                              "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                              "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "ArtifactHash",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "bucketNameParameter": CfnParameter {
                    "_allowedPattern": undefined,
                    "_allowedValues": undefined,
                    "_constraintDescription": undefined,
                    "_default": undefined,
                    "_description": "S3 bucket for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                    "_maxLength": undefined,
                    "_maxValue": undefined,
                    "_minLength": undefined,
                    "_minValue": undefined,
                    "_noEcho": undefined,
                    "_type": "String",
                    "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.105]}",
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.105]}",
                            "trace": Array [
                              "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:16:32)",
                              "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                              "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                              "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                              "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                              "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                              "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                              "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                              "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "S3Bucket",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "ArtifactHash": CfnParameter {
                          "_allowedPattern": undefined,
                          "_allowedValues": undefined,
                          "_constraintDescription": undefined,
                          "_default": undefined,
                          "_description": "Artifact hash for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                          "_maxLength": undefined,
                          "_maxValue": undefined,
                          "_minLength": undefined,
                          "_minValue": undefined,
                          "_noEcho": undefined,
                          "_type": "String",
                          "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.107]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.107]}",
                                  "trace": Array [
                                    "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:26:34)",
                                    "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                                    "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                                    "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                                    "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                                    "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                                    "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "ArtifactHash",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "S3Bucket": CfnParameter {
                          "_allowedPattern": undefined,
                          "_allowedValues": undefined,
                          "_constraintDescription": undefined,
                          "_default": undefined,
                          "_description": "S3 bucket for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                          "_maxLength": undefined,
                          "_maxValue": undefined,
                          "_minLength": undefined,
                          "_minValue": undefined,
                          "_noEcho": undefined,
                          "_type": "String",
                          "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.105]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.105]}",
                                  "trace": Array [
                                    "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:16:32)",
                                    "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                                    "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                                    "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                                    "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                                    "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                                    "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "S3Bucket",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "S3VersionKey": CfnParameter {
                          "_allowedPattern": undefined,
                          "_allowedValues": undefined,
                          "_constraintDescription": undefined,
                          "_default": undefined,
                          "_description": "S3 key for asset version \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                          "_maxLength": undefined,
                          "_maxValue": undefined,
                          "_minLength": undefined,
                          "_minValue": undefined,
                          "_noEcho": undefined,
                          "_type": "String",
                          "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.106]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.106]}",
                                  "trace": Array [
                                    "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:21:31)",
                                    "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                                    "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                                    "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                                    "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                                    "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                                    "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "S3VersionKey",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "objectKeyParameter": CfnParameter {
                    "_allowedPattern": undefined,
                    "_allowedValues": undefined,
                    "_constraintDescription": undefined,
                    "_default": undefined,
                    "_description": "S3 key for asset version \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                    "_maxLength": undefined,
                    "_maxValue": undefined,
                    "_minLength": undefined,
                    "_minValue": undefined,
                    "_noEcho": undefined,
                    "_type": "String",
                    "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.106]}",
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.106]}",
                            "trace": Array [
                              "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:21:31)",
                              "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                              "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                              "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                              "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                              "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                              "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                              "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                              "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "S3VersionKey",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
              },
              "_context": Object {},
              "_dependencies": Set {},
              "_locked": false,
              "_metadata": Array [],
              "_validations": Array [],
              "host": [Circular],
              "id": "AssetParameters",
              "invokedAspects": Array [],
              "scope": [Circular],
            },
            "host": [Circular],
          },
          Symbol(@aws-cdk/core.DependableTrait): Object {
            "dependencyRoots": Array [
              [Circular],
            ],
          },
        },
        "wakeywakey": WakeyWakey {
          "node": ConstructNode {
            "_actualNode": Node {
              "_aspects": Array [],
              "_children": Object {
                "handler": NodejsFunction {
                  "_allowCrossEnvironment": false,
                  "_invocationGrants": Object {},
                  "_physicalName": undefined,
                  "canCreatePermissions": true,
                  "currentVersionOptions": undefined,
                  "deadLetterQueue": undefined,
                  "env": Object {
                    "account": "\${Token[AWS.AccountId.0]}",
                    "region": "\${Token[AWS.Region.4]}",
                  },
                  "environment": Object {
                    "AWS_NODEJS_CONNECTION_REUSE_ENABLED": Object {
                      "removeInEdge": true,
                      "value": "1",
                    },
                    "INSTANCE_ID": Object {
                      "value": "wakeywakey",
                    },
                  },
                  "functionArn": "\${Token[TOKEN.120]}",
                  "functionName": "\${Token[TOKEN.119]}",
                  "grantPrincipal": Role {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "assumeRoleAction": "sts:AssumeRole",
                    "assumeRolePolicy": Object {
                      "Statement": Array [
                        Object {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": Object {
                            "Service": "\${Token[lambda.amazonaws.com.97]}",
                          },
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "attachedPolicies": AttachedPolicies {
                      "policies": Array [
                        Policy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": "\${Token[TOKEN.121]}",
                          "_policyName": "\${Token[TOKEN.121]}",
                          "document": Object {
                            "Statement": Array [
                              Object {
                                "Action": "ec2:DescribeInstances",
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                              Object {
                                "Action": "ec2:StartInstances",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.0]}",
                            "region": "\${Token[AWS.Region.4]}",
                          },
                          "force": false,
                          "groups": Array [],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": Object {
                                    "groups": Array [
                                      "#{Token[TOKEN.124]}",
                                    ],
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.121]}",
                                    "roles": Array [
                                      "#{Token[TOKEN.122]}",
                                    ],
                                    "users": Array [
                                      "#{Token[TOKEN.123]}",
                                    ],
                                  },
                                  "cfnOptions": Object {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": Array [
                                    "#{Token[TOKEN.124]}",
                                  ],
                                  "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [
                                        Object {
                                          "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                          "trace": Array [
                                            "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                            "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                            "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                            "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                            "new Promise (<anonymous>)",
                                            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                          ],
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "policyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "ec2:DescribeInstances",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      Object {
                                        "Action": "ec2:StartInstances",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.121]}",
                                  "rawOverrides": Object {},
                                  "roles": Array [
                                    "#{Token[TOKEN.122]}",
                                  ],
                                  "stack": [Circular],
                                  "users": Array [
                                    "#{Token[TOKEN.123]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.121]}",
                          "referenceTaken": false,
                          "roles": Array [
                            [Circular],
                          ],
                          "stack": [Circular],
                          "users": Array [],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      ],
                    },
                    "defaultPolicy": Policy {
                      "_allowCrossEnvironment": false,
                      "_physicalName": "\${Token[TOKEN.121]}",
                      "_policyName": "\${Token[TOKEN.121]}",
                      "document": Object {
                        "Statement": Array [
                          Object {
                            "Action": "ec2:DescribeInstances",
                            "Effect": "Allow",
                            "Resource": "*",
                          },
                          Object {
                            "Action": "ec2:StartInstances",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "env": Object {
                        "account": "\${Token[AWS.AccountId.0]}",
                        "region": "\${Token[AWS.Region.4]}",
                      },
                      "force": false,
                      "groups": Array [],
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": Object {
                                "groups": Array [
                                  "#{Token[TOKEN.124]}",
                                ],
                                "policyDocument": Object {
                                  "Statement": Array [
                                    Object {
                                      "Action": "ec2:DescribeInstances",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    Object {
                                      "Action": "ec2:StartInstances",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.121]}",
                                "roles": Array [
                                  "#{Token[TOKEN.122]}",
                                ],
                                "users": Array [
                                  "#{Token[TOKEN.123]}",
                                ],
                              },
                              "cfnOptions": Object {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": Array [
                                "#{Token[TOKEN.124]}",
                              ],
                              "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                              "node": ConstructNode {
                                "_actualNode": Node {
                                  "_aspects": Array [],
                                  "_children": Object {},
                                  "_context": Object {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": Array [
                                    Object {
                                      "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                      "trace": Array [
                                        "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                        "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                        "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                        "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                        "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                        "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                        "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                        "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                        "new Promise (<anonymous>)",
                                        "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                        "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                        "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                      ],
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": Array [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "invokedAspects": Array [],
                                  "scope": [Circular],
                                },
                                "host": [Circular],
                              },
                              "policyDocument": Object {
                                "Statement": Array [
                                  Object {
                                    "Action": "ec2:DescribeInstances",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  Object {
                                    "Action": "ec2:StartInstances",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.121]}",
                              "rawOverrides": Object {},
                              "roles": Array [
                                "#{Token[TOKEN.122]}",
                              ],
                              "stack": [Circular],
                              "users": Array [
                                "#{Token[TOKEN.123]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): Object {
                                "dependencyRoots": Array [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.121]}",
                      "referenceTaken": false,
                      "roles": Array [
                        [Circular],
                      ],
                      "stack": [Circular],
                      "users": Array [],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.0]}",
                      "region": "\${Token[AWS.Region.4]}",
                    },
                    "grantPrincipal": [Circular],
                    "inlinePolicies": Object {},
                    "managedPolicies": Array [
                      AwsManagedPolicy {
                        "managedPolicyArn": "\${Token[TOKEN.95]}",
                      },
                    ],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {
                          "DefaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.121]}",
                            "_policyName": "\${Token[TOKEN.121]}",
                            "document": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "ec2:DescribeInstances",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                Object {
                                  "Action": "ec2:StartInstances",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.0]}",
                              "region": "\${Token[AWS.Region.4]}",
                            },
                            "force": false,
                            "groups": Array [],
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": Object {
                                      "groups": Array [
                                        "#{Token[TOKEN.124]}",
                                      ],
                                      "policyDocument": Object {
                                        "Statement": Array [
                                          Object {
                                            "Action": "ec2:DescribeInstances",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          Object {
                                            "Action": "ec2:StartInstances",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.121]}",
                                      "roles": Array [
                                        "#{Token[TOKEN.122]}",
                                      ],
                                      "users": Array [
                                        "#{Token[TOKEN.123]}",
                                      ],
                                    },
                                    "cfnOptions": Object {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": Array [
                                      "#{Token[TOKEN.124]}",
                                    ],
                                    "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {},
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [
                                          Object {
                                            "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                            "trace": Array [
                                              "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                              "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                              "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                              "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                              "new Promise (<anonymous>)",
                                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                            ],
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.121]}",
                                    "rawOverrides": Object {},
                                    "roles": Array [
                                      "#{Token[TOKEN.122]}",
                                    ],
                                    "stack": [Circular],
                                    "users": Array [
                                      "#{Token[TOKEN.123]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.121]}",
                            "referenceTaken": false,
                            "roles": Array [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": Array [],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "Resource": CfnRole {
                            "_cfnProperties": Object {
                              "assumeRolePolicyDocument": Object {
                                "Statement": Array [
                                  Object {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": Object {
                                      "Service": "\${Token[lambda.amazonaws.com.97]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "description": undefined,
                              "managedPolicyArns": Array [
                                "#{Token[TOKEN.98]}",
                              ],
                              "maxSessionDuration": undefined,
                              "path": undefined,
                              "permissionsBoundary": undefined,
                              "policies": undefined,
                              "roleName": "\${Token[TOKEN.96]}",
                            },
                            "assumeRolePolicyDocument": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": Object {
                                    "Service": "\${Token[lambda.amazonaws.com.97]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attrArn": "\${Token[TOKEN.100]}",
                            "attrRoleId": "\${Token[TOKEN.101]}",
                            "cfnOptions": Object {},
                            "cfnResourceType": "AWS::IAM::Role",
                            "dependsOn": Set {},
                            "description": undefined,
                            "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.99]}",
                            "managedPolicyArns": Array [
                              "#{Token[TOKEN.98]}",
                            ],
                            "maxSessionDuration": undefined,
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [
                                  Object {
                                    "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.99]}",
                                    "trace": Array [
                                      "new Role (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:327:18)",
                                      "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:544:31)",
                                      "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                      "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                      "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                      "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                      "new Promise (<anonymous>)",
                                      "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                      "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                    ],
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "Resource",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "path": undefined,
                            "permissionsBoundary": undefined,
                            "policies": undefined,
                            "rawOverrides": Object {},
                            "roleName": "\${Token[TOKEN.96]}",
                            "stack": [Circular],
                            "tags": TagManager {
                              "initialTagPriority": 50,
                              "priorities": Map {},
                              "resourceTypeName": "AWS::IAM::Role",
                              "tagFormatter": StandardFormatter {},
                              "tagPropertyName": "tags",
                              "tags": Map {},
                            },
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "ServiceRole",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "permissionsBoundary": undefined,
                    "physicalName": "\${Token[TOKEN.96]}",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": Object {},
                      "principalJson": Object {
                        "AWS": Array [
                          "\${Token[TOKEN.102]}",
                        ],
                      },
                    },
                    "principalAccount": "\${Token[AWS.AccountId.0]}",
                    "roleArn": "\${Token[TOKEN.102]}",
                    "roleId": "\${Token[TOKEN.101]}",
                    "roleName": "\${Token[TOKEN.104]}",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "layers": Array [],
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Code": Asset {
                          "assetHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                          "assetPath": "asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                          "bucket": Import {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "autoCreatePolicy": false,
                            "bucketArn": "arn:\${Token[AWS.Partition.3]}:s3:::\${Token[TOKEN.108]}",
                            "bucketDomainName": "\${Token[TOKEN.108]}.s3.\${Token[AWS.URLSuffix.1]}",
                            "bucketDualStackDomainName": "\${Token[TOKEN.108]}.s3.dualstack.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "bucketName": "\${Token[TOKEN.108]}",
                            "bucketRegionalDomainName": "\${Token[TOKEN.108]}.s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "bucketWebsiteDomainName": "\${Token[TOKEN.108]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "bucketWebsiteNewUrlFormat": false,
                            "bucketWebsiteUrl": "http://\${Token[TOKEN.108]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "disallowPublicAccess": false,
                            "encryptionKey": undefined,
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.0]}",
                              "region": "\${Token[AWS.Region.4]}",
                            },
                            "isWebsite": false,
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "AssetBucket",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.114]}",
                            "policy": undefined,
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "httpUrl": "https://s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}/\${Token[TOKEN.108]}/\${Token[TOKEN.111]}\${Token[TOKEN.113]}",
                          "isFile": false,
                          "isZipArchive": true,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "AssetBucket": Import {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "autoCreatePolicy": false,
                                  "bucketArn": "arn:\${Token[AWS.Partition.3]}:s3:::\${Token[TOKEN.108]}",
                                  "bucketDomainName": "\${Token[TOKEN.108]}.s3.\${Token[AWS.URLSuffix.1]}",
                                  "bucketDualStackDomainName": "\${Token[TOKEN.108]}.s3.dualstack.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "bucketName": "\${Token[TOKEN.108]}",
                                  "bucketRegionalDomainName": "\${Token[TOKEN.108]}.s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "bucketWebsiteDomainName": "\${Token[TOKEN.108]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "bucketWebsiteNewUrlFormat": false,
                                  "bucketWebsiteUrl": "http://\${Token[TOKEN.108]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "disallowPublicAccess": false,
                                  "encryptionKey": undefined,
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.0]}",
                                    "region": "\${Token[AWS.Region.4]}",
                                  },
                                  "isWebsite": false,
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "AssetBucket",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.114]}",
                                  "policy": undefined,
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Stage": AssetStaging {
                                  "absoluteStagedPath": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.out1V6KFP/asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                                  "assetHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                                  "assetOutdir": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.out1V6KFP",
                                  "cacheKey": "62660d424d4bba88b6f6cabd77e21042bc023929a68537dad21806f44b1554a9",
                                  "customSourceFingerprint": undefined,
                                  "fingerprintOptions": Object {
                                    "assetHash": undefined,
                                    "assetHashType": "output",
                                    "bundling": Bundling {
                                      "command": Array [
                                        "bash",
                                        "-c",
                                        "npx esbuild --bundle /asset-input/src/wakeywakey.handler.js --target=node12 --platform=node --outfile=/asset-output/index.js --external:aws-sdk",
                                      ],
                                      "environment": undefined,
                                      "externals": Array [
                                        "aws-sdk",
                                      ],
                                      "image": "dummy",
                                      "local": Object {
                                        "tryBundle": [Function],
                                      },
                                      "props": Object {
                                        "depsLockFilePath": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/yarn.lock",
                                        "entry": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.handler.js",
                                        "runtime": Runtime {
                                          "bundlingDockerImage": "amazon/aws-sam-cli-build-image-nodejs12.x",
                                          "family": 0,
                                          "name": "nodejs12.x",
                                          "supportsInlineCode": true,
                                        },
                                      },
                                      "relativeEntryPath": "src/wakeywakey.handler.js",
                                    },
                                    "follow": undefined,
                                    "path": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey",
                                    "sourcePath": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey",
                                  },
                                  "hashType": "output",
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Stage",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "sourcePath": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey",
                                  "stagedPath": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.out1V6KFP/asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Code",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "s3BucketName": "\${Token[TOKEN.108]}",
                          "s3ObjectKey": "\${Token[TOKEN.111]}\${Token[TOKEN.113]}",
                          "s3ObjectUrl": "s3://\${Token[TOKEN.108]}/\${Token[TOKEN.111]}\${Token[TOKEN.113]}",
                          "s3Url": "https://s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}/\${Token[TOKEN.108]}/\${Token[TOKEN.111]}\${Token[TOKEN.113]}",
                          "sourceHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnFunction {
                          "_cfnProperties": Object {
                            "code": Object {
                              "imageUri": undefined,
                              "s3Bucket": "\${Token[TOKEN.108]}",
                              "s3Key": "\${Token[TOKEN.111]}\${Token[TOKEN.113]}",
                              "s3ObjectVersion": undefined,
                              "zipFile": undefined,
                            },
                            "deadLetterConfig": undefined,
                            "description": undefined,
                            "environment": "<unresolved-lazy>",
                            "functionName": "\${Token[TOKEN.94]}",
                            "handler": "index.handler",
                            "imageConfig": undefined,
                            "layers": Array [
                              "#{Token[TOKEN.115]}",
                            ],
                            "memorySize": undefined,
                            "packageType": undefined,
                            "reservedConcurrentExecutions": undefined,
                            "role": "\${Token[TOKEN.102]}",
                            "runtime": "nodejs12.x",
                            "timeout": undefined,
                            "tracingConfig": undefined,
                            "vpcConfig": undefined,
                          },
                          "attrArn": "\${Token[TOKEN.117]}",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Function",
                          "code": Object {
                            "imageUri": undefined,
                            "s3Bucket": "\${Token[TOKEN.108]}",
                            "s3Key": "\${Token[TOKEN.111]}\${Token[TOKEN.113]}",
                            "s3ObjectVersion": undefined,
                            "zipFile": undefined,
                          },
                          "codeSigningConfigArn": undefined,
                          "deadLetterConfig": undefined,
                          "dependsOn": Set {},
                          "description": undefined,
                          "environment": "<unresolved-lazy>",
                          "fileSystemConfigs": undefined,
                          "functionName": "\${Token[TOKEN.94]}",
                          "handler": "index.handler",
                          "imageConfig": undefined,
                          "kmsKeyArn": undefined,
                          "layers": Array [
                            "#{Token[TOKEN.115]}",
                          ],
                          "logicalId": "\${Token[test-stack.wakeywakey.handler.Resource.LogicalID.116]}",
                          "memorySize": undefined,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {
                                Role {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "assumeRolePolicy": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": Object {
                                          "Service": "\${Token[lambda.amazonaws.com.97]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": Array [
                                      Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.121]}",
                                        "_policyName": "\${Token[TOKEN.121]}",
                                        "document": Object {
                                          "Statement": Array [
                                            Object {
                                              "Action": "ec2:DescribeInstances",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            Object {
                                              "Action": "ec2:StartInstances",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": Object {
                                          "account": "\${Token[AWS.AccountId.0]}",
                                          "region": "\${Token[AWS.Region.4]}",
                                        },
                                        "force": false,
                                        "groups": Array [],
                                        "node": ConstructNode {
                                          "_actualNode": Node {
                                            "_aspects": Array [],
                                            "_children": Object {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": Object {
                                                  "groups": Array [
                                                    "#{Token[TOKEN.124]}",
                                                  ],
                                                  "policyDocument": Object {
                                                    "Statement": Array [
                                                      Object {
                                                        "Action": "ec2:DescribeInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      Object {
                                                        "Action": "ec2:StartInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.121]}",
                                                  "roles": Array [
                                                    "#{Token[TOKEN.122]}",
                                                  ],
                                                  "users": Array [
                                                    "#{Token[TOKEN.123]}",
                                                  ],
                                                },
                                                "cfnOptions": Object {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": Array [
                                                  "#{Token[TOKEN.124]}",
                                                ],
                                                "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                "node": ConstructNode {
                                                  "_actualNode": Node {
                                                    "_aspects": Array [],
                                                    "_children": Object {},
                                                    "_context": Object {},
                                                    "_dependencies": Set {},
                                                    "_locked": false,
                                                    "_metadata": Array [
                                                      Object {
                                                        "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                        "trace": Array [
                                                          "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                          "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                          "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                          "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                          "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                          "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                                          "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                          "new Promise (<anonymous>)",
                                                          "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                          "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                        ],
                                                        "type": "aws:cdk:logicalId",
                                                      },
                                                    ],
                                                    "_validations": Array [],
                                                    "host": [Circular],
                                                    "id": "Resource",
                                                    "invokedAspects": Array [],
                                                    "scope": [Circular],
                                                  },
                                                  "host": [Circular],
                                                },
                                                "policyDocument": Object {
                                                  "Statement": Array [
                                                    Object {
                                                      "Action": "ec2:DescribeInstances",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    Object {
                                                      "Action": "ec2:StartInstances",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.121]}",
                                                "rawOverrides": Object {},
                                                "roles": Array [
                                                  "#{Token[TOKEN.122]}",
                                                ],
                                                "stack": [Circular],
                                                "users": Array [
                                                  "#{Token[TOKEN.123]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): Object {
                                                  "dependencyRoots": Array [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": Object {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": Array [],
                                            "_validations": Array [],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "invokedAspects": Array [],
                                            "scope": [Circular],
                                          },
                                          "host": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.121]}",
                                        "referenceTaken": false,
                                        "roles": Array [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": Array [],
                                        Symbol(@aws-cdk/core.DependableTrait): Object {
                                          "dependencyRoots": Array [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "defaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.121]}",
                                    "_policyName": "\${Token[TOKEN.121]}",
                                    "document": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": Object {
                                      "account": "\${Token[AWS.AccountId.0]}",
                                      "region": "\${Token[AWS.Region.4]}",
                                    },
                                    "force": false,
                                    "groups": Array [],
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": Object {
                                              "groups": Array [
                                                "#{Token[TOKEN.124]}",
                                              ],
                                              "policyDocument": Object {
                                                "Statement": Array [
                                                  Object {
                                                    "Action": "ec2:DescribeInstances",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  Object {
                                                    "Action": "ec2:StartInstances",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.121]}",
                                              "roles": Array [
                                                "#{Token[TOKEN.122]}",
                                              ],
                                              "users": Array [
                                                "#{Token[TOKEN.123]}",
                                              ],
                                            },
                                            "cfnOptions": Object {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": Array [
                                              "#{Token[TOKEN.124]}",
                                            ],
                                            "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                            "node": ConstructNode {
                                              "_actualNode": Node {
                                                "_aspects": Array [],
                                                "_children": Object {},
                                                "_context": Object {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": Array [
                                                  Object {
                                                    "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                    "trace": Array [
                                                      "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                      "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                      "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                      "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                      "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                      "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                                      "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                      "new Promise (<anonymous>)",
                                                      "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                      "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                    ],
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": Array [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "invokedAspects": Array [],
                                                "scope": [Circular],
                                              },
                                              "host": [Circular],
                                            },
                                            "policyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": "ec2:DescribeInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                Object {
                                                  "Action": "ec2:StartInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.121]}",
                                            "rawOverrides": Object {},
                                            "roles": Array [
                                              "#{Token[TOKEN.122]}",
                                            ],
                                            "stack": [Circular],
                                            "users": Array [
                                              "#{Token[TOKEN.123]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): Object {
                                              "dependencyRoots": Array [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.121]}",
                                    "referenceTaken": false,
                                    "roles": Array [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": Array [],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.0]}",
                                    "region": "\${Token[AWS.Region.4]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "inlinePolicies": Object {},
                                  "managedPolicies": Array [
                                    AwsManagedPolicy {
                                      "managedPolicyArn": "\${Token[TOKEN.95]}",
                                    },
                                  ],
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {
                                        "DefaultPolicy": Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.121]}",
                                          "_policyName": "\${Token[TOKEN.121]}",
                                          "document": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "ec2:DescribeInstances",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              Object {
                                                "Action": "ec2:StartInstances",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": Object {
                                            "account": "\${Token[AWS.AccountId.0]}",
                                            "region": "\${Token[AWS.Region.4]}",
                                          },
                                          "force": false,
                                          "groups": Array [],
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {
                                                "Resource": CfnPolicyConditional {
                                                  "_cfnProperties": Object {
                                                    "groups": Array [
                                                      "#{Token[TOKEN.124]}",
                                                    ],
                                                    "policyDocument": Object {
                                                      "Statement": Array [
                                                        Object {
                                                          "Action": "ec2:DescribeInstances",
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        Object {
                                                          "Action": "ec2:StartInstances",
                                                          "Effect": "Allow",
                                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                        },
                                                      ],
                                                      "Version": "2012-10-17",
                                                    },
                                                    "policyName": "\${Token[TOKEN.121]}",
                                                    "roles": Array [
                                                      "#{Token[TOKEN.122]}",
                                                    ],
                                                    "users": Array [
                                                      "#{Token[TOKEN.123]}",
                                                    ],
                                                  },
                                                  "cfnOptions": Object {},
                                                  "cfnResourceType": "AWS::IAM::Policy",
                                                  "dependsOn": Set {},
                                                  "groups": Array [
                                                    "#{Token[TOKEN.124]}",
                                                  ],
                                                  "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                  "node": ConstructNode {
                                                    "_actualNode": Node {
                                                      "_aspects": Array [],
                                                      "_children": Object {},
                                                      "_context": Object {},
                                                      "_dependencies": Set {},
                                                      "_locked": false,
                                                      "_metadata": Array [
                                                        Object {
                                                          "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                          "trace": Array [
                                                            "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                            "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                            "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                            "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                                            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                            "new Promise (<anonymous>)",
                                                            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                          ],
                                                          "type": "aws:cdk:logicalId",
                                                        },
                                                      ],
                                                      "_validations": Array [],
                                                      "host": [Circular],
                                                      "id": "Resource",
                                                      "invokedAspects": Array [],
                                                      "scope": [Circular],
                                                    },
                                                    "host": [Circular],
                                                  },
                                                  "policyDocument": Object {
                                                    "Statement": Array [
                                                      Object {
                                                        "Action": "ec2:DescribeInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      Object {
                                                        "Action": "ec2:StartInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.121]}",
                                                  "rawOverrides": Object {},
                                                  "roles": Array [
                                                    "#{Token[TOKEN.122]}",
                                                  ],
                                                  "stack": [Circular],
                                                  "users": Array [
                                                    "#{Token[TOKEN.123]}",
                                                  ],
                                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                                    "dependencyRoots": Array [
                                                      [Circular],
                                                    ],
                                                  },
                                                },
                                              },
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "DefaultPolicy",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.121]}",
                                          "referenceTaken": false,
                                          "roles": Array [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": Array [],
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "Resource": CfnRole {
                                          "_cfnProperties": Object {
                                            "assumeRolePolicyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": "sts:AssumeRole",
                                                  "Effect": "Allow",
                                                  "Principal": Object {
                                                    "Service": "\${Token[lambda.amazonaws.com.97]}",
                                                  },
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "description": undefined,
                                            "managedPolicyArns": Array [
                                              "#{Token[TOKEN.98]}",
                                            ],
                                            "maxSessionDuration": undefined,
                                            "path": undefined,
                                            "permissionsBoundary": undefined,
                                            "policies": undefined,
                                            "roleName": "\${Token[TOKEN.96]}",
                                          },
                                          "assumeRolePolicyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": Object {
                                                  "Service": "\${Token[lambda.amazonaws.com.97]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "attrArn": "\${Token[TOKEN.100]}",
                                          "attrRoleId": "\${Token[TOKEN.101]}",
                                          "cfnOptions": Object {},
                                          "cfnResourceType": "AWS::IAM::Role",
                                          "dependsOn": Set {},
                                          "description": undefined,
                                          "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.99]}",
                                          "managedPolicyArns": Array [
                                            "#{Token[TOKEN.98]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {},
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [
                                                Object {
                                                  "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.99]}",
                                                  "trace": Array [
                                                    "new Role (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:327:18)",
                                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:544:31)",
                                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                    "new Promise (<anonymous>)",
                                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                  ],
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "rawOverrides": Object {},
                                          "roleName": "\${Token[TOKEN.96]}",
                                          "stack": [Circular],
                                          "tags": TagManager {
                                            "initialTagPriority": 50,
                                            "priorities": Map {},
                                            "resourceTypeName": "AWS::IAM::Role",
                                            "tagFormatter": StandardFormatter {},
                                            "tagPropertyName": "tags",
                                            "tags": Map {},
                                          },
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "ServiceRole",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "permissionsBoundary": undefined,
                                  "physicalName": "\${Token[TOKEN.96]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": Object {},
                                    "principalJson": Object {
                                      "AWS": Array [
                                        "\${Token[TOKEN.102]}",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.0]}",
                                  "roleArn": "\${Token[TOKEN.102]}",
                                  "roleId": "\${Token[TOKEN.101]}",
                                  "roleName": "\${Token[TOKEN.104]}",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.wakeywakey.handler.Resource.LogicalID.116]}",
                                  "trace": Array [
                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:600:35)",
                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "packageType": undefined,
                          "rawOverrides": Object {},
                          "reservedConcurrentExecutions": undefined,
                          "role": "\${Token[TOKEN.102]}",
                          "runtime": "nodejs12.x",
                          "stack": [Circular],
                          "tags": TagManager {
                            "initialTagPriority": 50,
                            "priorities": Map {},
                            "resourceTypeName": "AWS::Lambda::Function",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          "timeout": undefined,
                          "tracingConfig": undefined,
                          "vpcConfig": undefined,
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "ServiceRole": Role {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": Object {
                            "Statement": Array [
                              Object {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": Object {
                                  "Service": "\${Token[lambda.amazonaws.com.97]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": Array [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.121]}",
                                "_policyName": "\${Token[TOKEN.121]}",
                                "document": Object {
                                  "Statement": Array [
                                    Object {
                                      "Action": "ec2:DescribeInstances",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    Object {
                                      "Action": "ec2:StartInstances",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": Object {
                                  "account": "\${Token[AWS.AccountId.0]}",
                                  "region": "\${Token[AWS.Region.4]}",
                                },
                                "force": false,
                                "groups": Array [],
                                "node": ConstructNode {
                                  "_actualNode": Node {
                                    "_aspects": Array [],
                                    "_children": Object {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": Object {
                                          "groups": Array [
                                            "#{Token[TOKEN.124]}",
                                          ],
                                          "policyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "ec2:DescribeInstances",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              Object {
                                                "Action": "ec2:StartInstances",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.121]}",
                                          "roles": Array [
                                            "#{Token[TOKEN.122]}",
                                          ],
                                          "users": Array [
                                            "#{Token[TOKEN.123]}",
                                          ],
                                        },
                                        "cfnOptions": Object {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": Array [
                                          "#{Token[TOKEN.124]}",
                                        ],
                                        "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                        "node": ConstructNode {
                                          "_actualNode": Node {
                                            "_aspects": Array [],
                                            "_children": Object {},
                                            "_context": Object {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": Array [
                                              Object {
                                                "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                "trace": Array [
                                                  "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                  "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                  "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                  "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                  "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                  "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                                  "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                  "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                  "new Promise (<anonymous>)",
                                                  "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                  "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                  "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                ],
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": Array [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "invokedAspects": Array [],
                                            "scope": [Circular],
                                          },
                                          "host": [Circular],
                                        },
                                        "policyDocument": Object {
                                          "Statement": Array [
                                            Object {
                                              "Action": "ec2:DescribeInstances",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            Object {
                                              "Action": "ec2:StartInstances",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.121]}",
                                        "rawOverrides": Object {},
                                        "roles": Array [
                                          "#{Token[TOKEN.122]}",
                                        ],
                                        "stack": [Circular],
                                        "users": Array [
                                          "#{Token[TOKEN.123]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): Object {
                                          "dependencyRoots": Array [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": Object {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": Array [],
                                    "_validations": Array [],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "invokedAspects": Array [],
                                    "scope": [Circular],
                                  },
                                  "host": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.121]}",
                                "referenceTaken": false,
                                "roles": Array [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": Array [],
                                Symbol(@aws-cdk/core.DependableTrait): Object {
                                  "dependencyRoots": Array [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.121]}",
                            "_policyName": "\${Token[TOKEN.121]}",
                            "document": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "ec2:DescribeInstances",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                Object {
                                  "Action": "ec2:StartInstances",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.0]}",
                              "region": "\${Token[AWS.Region.4]}",
                            },
                            "force": false,
                            "groups": Array [],
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": Object {
                                      "groups": Array [
                                        "#{Token[TOKEN.124]}",
                                      ],
                                      "policyDocument": Object {
                                        "Statement": Array [
                                          Object {
                                            "Action": "ec2:DescribeInstances",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          Object {
                                            "Action": "ec2:StartInstances",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.121]}",
                                      "roles": Array [
                                        "#{Token[TOKEN.122]}",
                                      ],
                                      "users": Array [
                                        "#{Token[TOKEN.123]}",
                                      ],
                                    },
                                    "cfnOptions": Object {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": Array [
                                      "#{Token[TOKEN.124]}",
                                    ],
                                    "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {},
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [
                                          Object {
                                            "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                            "trace": Array [
                                              "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                              "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                              "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                              "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                              "new Promise (<anonymous>)",
                                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                            ],
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.121]}",
                                    "rawOverrides": Object {},
                                    "roles": Array [
                                      "#{Token[TOKEN.122]}",
                                    ],
                                    "stack": [Circular],
                                    "users": Array [
                                      "#{Token[TOKEN.123]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.121]}",
                            "referenceTaken": false,
                            "roles": Array [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": Array [],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.0]}",
                            "region": "\${Token[AWS.Region.4]}",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": Object {},
                          "managedPolicies": Array [
                            AwsManagedPolicy {
                              "managedPolicyArn": "\${Token[TOKEN.95]}",
                            },
                          ],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.121]}",
                                  "_policyName": "\${Token[TOKEN.121]}",
                                  "document": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "ec2:DescribeInstances",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      Object {
                                        "Action": "ec2:StartInstances",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.0]}",
                                    "region": "\${Token[AWS.Region.4]}",
                                  },
                                  "force": false,
                                  "groups": Array [],
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": Object {
                                            "groups": Array [
                                              "#{Token[TOKEN.124]}",
                                            ],
                                            "policyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": "ec2:DescribeInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                Object {
                                                  "Action": "ec2:StartInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.121]}",
                                            "roles": Array [
                                              "#{Token[TOKEN.122]}",
                                            ],
                                            "users": Array [
                                              "#{Token[TOKEN.123]}",
                                            ],
                                          },
                                          "cfnOptions": Object {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": Array [
                                            "#{Token[TOKEN.124]}",
                                          ],
                                          "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {},
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [
                                                Object {
                                                  "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                  "trace": Array [
                                                    "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                    "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                    "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                    "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                    "new Promise (<anonymous>)",
                                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                  ],
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "policyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "ec2:DescribeInstances",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              Object {
                                                "Action": "ec2:StartInstances",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.121]}",
                                          "rawOverrides": Object {},
                                          "roles": Array [
                                            "#{Token[TOKEN.122]}",
                                          ],
                                          "stack": [Circular],
                                          "users": Array [
                                            "#{Token[TOKEN.123]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.121]}",
                                  "referenceTaken": false,
                                  "roles": Array [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": Array [],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": Object {
                                    "assumeRolePolicyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": Object {
                                            "Service": "\${Token[lambda.amazonaws.com.97]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": undefined,
                                    "managedPolicyArns": Array [
                                      "#{Token[TOKEN.98]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "\${Token[TOKEN.96]}",
                                  },
                                  "assumeRolePolicyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": Object {
                                          "Service": "\${Token[lambda.amazonaws.com.97]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.100]}",
                                  "attrRoleId": "\${Token[TOKEN.101]}",
                                  "cfnOptions": Object {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.99]}",
                                  "managedPolicyArns": Array [
                                    "#{Token[TOKEN.98]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [
                                        Object {
                                          "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.99]}",
                                          "trace": Array [
                                            "new Role (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:327:18)",
                                            "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:544:31)",
                                            "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                            "new Promise (<anonymous>)",
                                            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                          ],
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": Object {},
                                  "roleName": "\${Token[TOKEN.96]}",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "initialTagPriority": 50,
                                    "priorities": Map {},
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "ServiceRole",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "\${Token[TOKEN.96]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": Object {},
                            "principalJson": Object {
                              "AWS": Array [
                                "\${Token[TOKEN.102]}",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.0]}",
                          "roleArn": "\${Token[TOKEN.102]}",
                          "roleId": "\${Token[TOKEN.101]}",
                          "roleName": "\${Token[TOKEN.104]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "handler",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "permissionsNode": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Code": Asset {
                          "assetHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                          "assetPath": "asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                          "bucket": Import {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "autoCreatePolicy": false,
                            "bucketArn": "arn:\${Token[AWS.Partition.3]}:s3:::\${Token[TOKEN.108]}",
                            "bucketDomainName": "\${Token[TOKEN.108]}.s3.\${Token[AWS.URLSuffix.1]}",
                            "bucketDualStackDomainName": "\${Token[TOKEN.108]}.s3.dualstack.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "bucketName": "\${Token[TOKEN.108]}",
                            "bucketRegionalDomainName": "\${Token[TOKEN.108]}.s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "bucketWebsiteDomainName": "\${Token[TOKEN.108]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "bucketWebsiteNewUrlFormat": false,
                            "bucketWebsiteUrl": "http://\${Token[TOKEN.108]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                            "disallowPublicAccess": false,
                            "encryptionKey": undefined,
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.0]}",
                              "region": "\${Token[AWS.Region.4]}",
                            },
                            "isWebsite": false,
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "AssetBucket",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.114]}",
                            "policy": undefined,
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "httpUrl": "https://s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}/\${Token[TOKEN.108]}/\${Token[TOKEN.111]}\${Token[TOKEN.113]}",
                          "isFile": false,
                          "isZipArchive": true,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "AssetBucket": Import {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "autoCreatePolicy": false,
                                  "bucketArn": "arn:\${Token[AWS.Partition.3]}:s3:::\${Token[TOKEN.108]}",
                                  "bucketDomainName": "\${Token[TOKEN.108]}.s3.\${Token[AWS.URLSuffix.1]}",
                                  "bucketDualStackDomainName": "\${Token[TOKEN.108]}.s3.dualstack.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "bucketName": "\${Token[TOKEN.108]}",
                                  "bucketRegionalDomainName": "\${Token[TOKEN.108]}.s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "bucketWebsiteDomainName": "\${Token[TOKEN.108]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "bucketWebsiteNewUrlFormat": false,
                                  "bucketWebsiteUrl": "http://\${Token[TOKEN.108]}.s3-website-\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}",
                                  "disallowPublicAccess": false,
                                  "encryptionKey": undefined,
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.0]}",
                                    "region": "\${Token[AWS.Region.4]}",
                                  },
                                  "isWebsite": false,
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "AssetBucket",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.114]}",
                                  "policy": undefined,
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Stage": AssetStaging {
                                  "absoluteStagedPath": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.out1V6KFP/asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                                  "assetHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                                  "assetOutdir": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.out1V6KFP",
                                  "cacheKey": "62660d424d4bba88b6f6cabd77e21042bc023929a68537dad21806f44b1554a9",
                                  "customSourceFingerprint": undefined,
                                  "fingerprintOptions": Object {
                                    "assetHash": undefined,
                                    "assetHashType": "output",
                                    "bundling": Bundling {
                                      "command": Array [
                                        "bash",
                                        "-c",
                                        "npx esbuild --bundle /asset-input/src/wakeywakey.handler.js --target=node12 --platform=node --outfile=/asset-output/index.js --external:aws-sdk",
                                      ],
                                      "environment": undefined,
                                      "externals": Array [
                                        "aws-sdk",
                                      ],
                                      "image": "dummy",
                                      "local": Object {
                                        "tryBundle": [Function],
                                      },
                                      "props": Object {
                                        "depsLockFilePath": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/yarn.lock",
                                        "entry": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.handler.js",
                                        "runtime": Runtime {
                                          "bundlingDockerImage": "amazon/aws-sam-cli-build-image-nodejs12.x",
                                          "family": 0,
                                          "name": "nodejs12.x",
                                          "supportsInlineCode": true,
                                        },
                                      },
                                      "relativeEntryPath": "src/wakeywakey.handler.js",
                                    },
                                    "follow": undefined,
                                    "path": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey",
                                    "sourcePath": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey",
                                  },
                                  "hashType": "output",
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Stage",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "sourcePath": "/Users/pgollucci/src/github.com/pgollucci/wakeywakey",
                                  "stagedPath": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.out1V6KFP/asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Code",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "s3BucketName": "\${Token[TOKEN.108]}",
                          "s3ObjectKey": "\${Token[TOKEN.111]}\${Token[TOKEN.113]}",
                          "s3ObjectUrl": "s3://\${Token[TOKEN.108]}/\${Token[TOKEN.111]}\${Token[TOKEN.113]}",
                          "s3Url": "https://s3.\${Token[AWS.Region.4]}.\${Token[AWS.URLSuffix.1]}/\${Token[TOKEN.108]}/\${Token[TOKEN.111]}\${Token[TOKEN.113]}",
                          "sourceHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnFunction {
                          "_cfnProperties": Object {
                            "code": Object {
                              "imageUri": undefined,
                              "s3Bucket": "\${Token[TOKEN.108]}",
                              "s3Key": "\${Token[TOKEN.111]}\${Token[TOKEN.113]}",
                              "s3ObjectVersion": undefined,
                              "zipFile": undefined,
                            },
                            "deadLetterConfig": undefined,
                            "description": undefined,
                            "environment": "<unresolved-lazy>",
                            "functionName": "\${Token[TOKEN.94]}",
                            "handler": "index.handler",
                            "imageConfig": undefined,
                            "layers": Array [
                              "#{Token[TOKEN.115]}",
                            ],
                            "memorySize": undefined,
                            "packageType": undefined,
                            "reservedConcurrentExecutions": undefined,
                            "role": "\${Token[TOKEN.102]}",
                            "runtime": "nodejs12.x",
                            "timeout": undefined,
                            "tracingConfig": undefined,
                            "vpcConfig": undefined,
                          },
                          "attrArn": "\${Token[TOKEN.117]}",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Function",
                          "code": Object {
                            "imageUri": undefined,
                            "s3Bucket": "\${Token[TOKEN.108]}",
                            "s3Key": "\${Token[TOKEN.111]}\${Token[TOKEN.113]}",
                            "s3ObjectVersion": undefined,
                            "zipFile": undefined,
                          },
                          "codeSigningConfigArn": undefined,
                          "deadLetterConfig": undefined,
                          "dependsOn": Set {},
                          "description": undefined,
                          "environment": "<unresolved-lazy>",
                          "fileSystemConfigs": undefined,
                          "functionName": "\${Token[TOKEN.94]}",
                          "handler": "index.handler",
                          "imageConfig": undefined,
                          "kmsKeyArn": undefined,
                          "layers": Array [
                            "#{Token[TOKEN.115]}",
                          ],
                          "logicalId": "\${Token[test-stack.wakeywakey.handler.Resource.LogicalID.116]}",
                          "memorySize": undefined,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {
                                Role {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "assumeRolePolicy": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": Object {
                                          "Service": "\${Token[lambda.amazonaws.com.97]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": Array [
                                      Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.121]}",
                                        "_policyName": "\${Token[TOKEN.121]}",
                                        "document": Object {
                                          "Statement": Array [
                                            Object {
                                              "Action": "ec2:DescribeInstances",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            Object {
                                              "Action": "ec2:StartInstances",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": Object {
                                          "account": "\${Token[AWS.AccountId.0]}",
                                          "region": "\${Token[AWS.Region.4]}",
                                        },
                                        "force": false,
                                        "groups": Array [],
                                        "node": ConstructNode {
                                          "_actualNode": Node {
                                            "_aspects": Array [],
                                            "_children": Object {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": Object {
                                                  "groups": Array [
                                                    "#{Token[TOKEN.124]}",
                                                  ],
                                                  "policyDocument": Object {
                                                    "Statement": Array [
                                                      Object {
                                                        "Action": "ec2:DescribeInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      Object {
                                                        "Action": "ec2:StartInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.121]}",
                                                  "roles": Array [
                                                    "#{Token[TOKEN.122]}",
                                                  ],
                                                  "users": Array [
                                                    "#{Token[TOKEN.123]}",
                                                  ],
                                                },
                                                "cfnOptions": Object {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": Array [
                                                  "#{Token[TOKEN.124]}",
                                                ],
                                                "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                "node": ConstructNode {
                                                  "_actualNode": Node {
                                                    "_aspects": Array [],
                                                    "_children": Object {},
                                                    "_context": Object {},
                                                    "_dependencies": Set {},
                                                    "_locked": false,
                                                    "_metadata": Array [
                                                      Object {
                                                        "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                        "trace": Array [
                                                          "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                          "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                          "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                          "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                          "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                          "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                                          "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                          "new Promise (<anonymous>)",
                                                          "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                          "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                        ],
                                                        "type": "aws:cdk:logicalId",
                                                      },
                                                    ],
                                                    "_validations": Array [],
                                                    "host": [Circular],
                                                    "id": "Resource",
                                                    "invokedAspects": Array [],
                                                    "scope": [Circular],
                                                  },
                                                  "host": [Circular],
                                                },
                                                "policyDocument": Object {
                                                  "Statement": Array [
                                                    Object {
                                                      "Action": "ec2:DescribeInstances",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    Object {
                                                      "Action": "ec2:StartInstances",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.121]}",
                                                "rawOverrides": Object {},
                                                "roles": Array [
                                                  "#{Token[TOKEN.122]}",
                                                ],
                                                "stack": [Circular],
                                                "users": Array [
                                                  "#{Token[TOKEN.123]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): Object {
                                                  "dependencyRoots": Array [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": Object {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": Array [],
                                            "_validations": Array [],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "invokedAspects": Array [],
                                            "scope": [Circular],
                                          },
                                          "host": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.121]}",
                                        "referenceTaken": false,
                                        "roles": Array [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": Array [],
                                        Symbol(@aws-cdk/core.DependableTrait): Object {
                                          "dependencyRoots": Array [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "defaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.121]}",
                                    "_policyName": "\${Token[TOKEN.121]}",
                                    "document": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": Object {
                                      "account": "\${Token[AWS.AccountId.0]}",
                                      "region": "\${Token[AWS.Region.4]}",
                                    },
                                    "force": false,
                                    "groups": Array [],
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": Object {
                                              "groups": Array [
                                                "#{Token[TOKEN.124]}",
                                              ],
                                              "policyDocument": Object {
                                                "Statement": Array [
                                                  Object {
                                                    "Action": "ec2:DescribeInstances",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  Object {
                                                    "Action": "ec2:StartInstances",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.121]}",
                                              "roles": Array [
                                                "#{Token[TOKEN.122]}",
                                              ],
                                              "users": Array [
                                                "#{Token[TOKEN.123]}",
                                              ],
                                            },
                                            "cfnOptions": Object {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": Array [
                                              "#{Token[TOKEN.124]}",
                                            ],
                                            "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                            "node": ConstructNode {
                                              "_actualNode": Node {
                                                "_aspects": Array [],
                                                "_children": Object {},
                                                "_context": Object {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": Array [
                                                  Object {
                                                    "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                    "trace": Array [
                                                      "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                      "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                      "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                      "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                      "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                      "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                                      "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                      "new Promise (<anonymous>)",
                                                      "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                      "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                    ],
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": Array [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "invokedAspects": Array [],
                                                "scope": [Circular],
                                              },
                                              "host": [Circular],
                                            },
                                            "policyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": "ec2:DescribeInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                Object {
                                                  "Action": "ec2:StartInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.121]}",
                                            "rawOverrides": Object {},
                                            "roles": Array [
                                              "#{Token[TOKEN.122]}",
                                            ],
                                            "stack": [Circular],
                                            "users": Array [
                                              "#{Token[TOKEN.123]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): Object {
                                              "dependencyRoots": Array [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.121]}",
                                    "referenceTaken": false,
                                    "roles": Array [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": Array [],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.0]}",
                                    "region": "\${Token[AWS.Region.4]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "inlinePolicies": Object {},
                                  "managedPolicies": Array [
                                    AwsManagedPolicy {
                                      "managedPolicyArn": "\${Token[TOKEN.95]}",
                                    },
                                  ],
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {
                                        "DefaultPolicy": Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.121]}",
                                          "_policyName": "\${Token[TOKEN.121]}",
                                          "document": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "ec2:DescribeInstances",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              Object {
                                                "Action": "ec2:StartInstances",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": Object {
                                            "account": "\${Token[AWS.AccountId.0]}",
                                            "region": "\${Token[AWS.Region.4]}",
                                          },
                                          "force": false,
                                          "groups": Array [],
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {
                                                "Resource": CfnPolicyConditional {
                                                  "_cfnProperties": Object {
                                                    "groups": Array [
                                                      "#{Token[TOKEN.124]}",
                                                    ],
                                                    "policyDocument": Object {
                                                      "Statement": Array [
                                                        Object {
                                                          "Action": "ec2:DescribeInstances",
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        Object {
                                                          "Action": "ec2:StartInstances",
                                                          "Effect": "Allow",
                                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                        },
                                                      ],
                                                      "Version": "2012-10-17",
                                                    },
                                                    "policyName": "\${Token[TOKEN.121]}",
                                                    "roles": Array [
                                                      "#{Token[TOKEN.122]}",
                                                    ],
                                                    "users": Array [
                                                      "#{Token[TOKEN.123]}",
                                                    ],
                                                  },
                                                  "cfnOptions": Object {},
                                                  "cfnResourceType": "AWS::IAM::Policy",
                                                  "dependsOn": Set {},
                                                  "groups": Array [
                                                    "#{Token[TOKEN.124]}",
                                                  ],
                                                  "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                  "node": ConstructNode {
                                                    "_actualNode": Node {
                                                      "_aspects": Array [],
                                                      "_children": Object {},
                                                      "_context": Object {},
                                                      "_dependencies": Set {},
                                                      "_locked": false,
                                                      "_metadata": Array [
                                                        Object {
                                                          "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                          "trace": Array [
                                                            "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                            "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                            "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                            "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                                            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                            "new Promise (<anonymous>)",
                                                            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                          ],
                                                          "type": "aws:cdk:logicalId",
                                                        },
                                                      ],
                                                      "_validations": Array [],
                                                      "host": [Circular],
                                                      "id": "Resource",
                                                      "invokedAspects": Array [],
                                                      "scope": [Circular],
                                                    },
                                                    "host": [Circular],
                                                  },
                                                  "policyDocument": Object {
                                                    "Statement": Array [
                                                      Object {
                                                        "Action": "ec2:DescribeInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      Object {
                                                        "Action": "ec2:StartInstances",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.121]}",
                                                  "rawOverrides": Object {},
                                                  "roles": Array [
                                                    "#{Token[TOKEN.122]}",
                                                  ],
                                                  "stack": [Circular],
                                                  "users": Array [
                                                    "#{Token[TOKEN.123]}",
                                                  ],
                                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                                    "dependencyRoots": Array [
                                                      [Circular],
                                                    ],
                                                  },
                                                },
                                              },
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "DefaultPolicy",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.121]}",
                                          "referenceTaken": false,
                                          "roles": Array [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": Array [],
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "Resource": CfnRole {
                                          "_cfnProperties": Object {
                                            "assumeRolePolicyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": "sts:AssumeRole",
                                                  "Effect": "Allow",
                                                  "Principal": Object {
                                                    "Service": "\${Token[lambda.amazonaws.com.97]}",
                                                  },
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "description": undefined,
                                            "managedPolicyArns": Array [
                                              "#{Token[TOKEN.98]}",
                                            ],
                                            "maxSessionDuration": undefined,
                                            "path": undefined,
                                            "permissionsBoundary": undefined,
                                            "policies": undefined,
                                            "roleName": "\${Token[TOKEN.96]}",
                                          },
                                          "assumeRolePolicyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": Object {
                                                  "Service": "\${Token[lambda.amazonaws.com.97]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "attrArn": "\${Token[TOKEN.100]}",
                                          "attrRoleId": "\${Token[TOKEN.101]}",
                                          "cfnOptions": Object {},
                                          "cfnResourceType": "AWS::IAM::Role",
                                          "dependsOn": Set {},
                                          "description": undefined,
                                          "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.99]}",
                                          "managedPolicyArns": Array [
                                            "#{Token[TOKEN.98]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {},
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [
                                                Object {
                                                  "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.99]}",
                                                  "trace": Array [
                                                    "new Role (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:327:18)",
                                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:544:31)",
                                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                    "new Promise (<anonymous>)",
                                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                  ],
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "rawOverrides": Object {},
                                          "roleName": "\${Token[TOKEN.96]}",
                                          "stack": [Circular],
                                          "tags": TagManager {
                                            "initialTagPriority": 50,
                                            "priorities": Map {},
                                            "resourceTypeName": "AWS::IAM::Role",
                                            "tagFormatter": StandardFormatter {},
                                            "tagPropertyName": "tags",
                                            "tags": Map {},
                                          },
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "ServiceRole",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "permissionsBoundary": undefined,
                                  "physicalName": "\${Token[TOKEN.96]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": Object {},
                                    "principalJson": Object {
                                      "AWS": Array [
                                        "\${Token[TOKEN.102]}",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.0]}",
                                  "roleArn": "\${Token[TOKEN.102]}",
                                  "roleId": "\${Token[TOKEN.101]}",
                                  "roleName": "\${Token[TOKEN.104]}",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.wakeywakey.handler.Resource.LogicalID.116]}",
                                  "trace": Array [
                                    "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:600:35)",
                                    "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "packageType": undefined,
                          "rawOverrides": Object {},
                          "reservedConcurrentExecutions": undefined,
                          "role": "\${Token[TOKEN.102]}",
                          "runtime": "nodejs12.x",
                          "stack": [Circular],
                          "tags": TagManager {
                            "initialTagPriority": 50,
                            "priorities": Map {},
                            "resourceTypeName": "AWS::Lambda::Function",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          "timeout": undefined,
                          "tracingConfig": undefined,
                          "vpcConfig": undefined,
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "ServiceRole": Role {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": Object {
                            "Statement": Array [
                              Object {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": Object {
                                  "Service": "\${Token[lambda.amazonaws.com.97]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": Array [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.121]}",
                                "_policyName": "\${Token[TOKEN.121]}",
                                "document": Object {
                                  "Statement": Array [
                                    Object {
                                      "Action": "ec2:DescribeInstances",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    Object {
                                      "Action": "ec2:StartInstances",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": Object {
                                  "account": "\${Token[AWS.AccountId.0]}",
                                  "region": "\${Token[AWS.Region.4]}",
                                },
                                "force": false,
                                "groups": Array [],
                                "node": ConstructNode {
                                  "_actualNode": Node {
                                    "_aspects": Array [],
                                    "_children": Object {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": Object {
                                          "groups": Array [
                                            "#{Token[TOKEN.124]}",
                                          ],
                                          "policyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "ec2:DescribeInstances",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              Object {
                                                "Action": "ec2:StartInstances",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.121]}",
                                          "roles": Array [
                                            "#{Token[TOKEN.122]}",
                                          ],
                                          "users": Array [
                                            "#{Token[TOKEN.123]}",
                                          ],
                                        },
                                        "cfnOptions": Object {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": Array [
                                          "#{Token[TOKEN.124]}",
                                        ],
                                        "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                        "node": ConstructNode {
                                          "_actualNode": Node {
                                            "_aspects": Array [],
                                            "_children": Object {},
                                            "_context": Object {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": Array [
                                              Object {
                                                "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                "trace": Array [
                                                  "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                  "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                  "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                  "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                  "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                  "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                                  "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                  "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                  "new Promise (<anonymous>)",
                                                  "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                  "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                  "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                ],
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": Array [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "invokedAspects": Array [],
                                            "scope": [Circular],
                                          },
                                          "host": [Circular],
                                        },
                                        "policyDocument": Object {
                                          "Statement": Array [
                                            Object {
                                              "Action": "ec2:DescribeInstances",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            Object {
                                              "Action": "ec2:StartInstances",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.121]}",
                                        "rawOverrides": Object {},
                                        "roles": Array [
                                          "#{Token[TOKEN.122]}",
                                        ],
                                        "stack": [Circular],
                                        "users": Array [
                                          "#{Token[TOKEN.123]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): Object {
                                          "dependencyRoots": Array [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": Object {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": Array [],
                                    "_validations": Array [],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "invokedAspects": Array [],
                                    "scope": [Circular],
                                  },
                                  "host": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.121]}",
                                "referenceTaken": false,
                                "roles": Array [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": Array [],
                                Symbol(@aws-cdk/core.DependableTrait): Object {
                                  "dependencyRoots": Array [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.121]}",
                            "_policyName": "\${Token[TOKEN.121]}",
                            "document": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "ec2:DescribeInstances",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                Object {
                                  "Action": "ec2:StartInstances",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.0]}",
                              "region": "\${Token[AWS.Region.4]}",
                            },
                            "force": false,
                            "groups": Array [],
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": Object {
                                      "groups": Array [
                                        "#{Token[TOKEN.124]}",
                                      ],
                                      "policyDocument": Object {
                                        "Statement": Array [
                                          Object {
                                            "Action": "ec2:DescribeInstances",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          Object {
                                            "Action": "ec2:StartInstances",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.121]}",
                                      "roles": Array [
                                        "#{Token[TOKEN.122]}",
                                      ],
                                      "users": Array [
                                        "#{Token[TOKEN.123]}",
                                      ],
                                    },
                                    "cfnOptions": Object {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": Array [
                                      "#{Token[TOKEN.124]}",
                                    ],
                                    "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {},
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [
                                          Object {
                                            "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                            "trace": Array [
                                              "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                              "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                              "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                              "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                              "new Promise (<anonymous>)",
                                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                            ],
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.121]}",
                                    "rawOverrides": Object {},
                                    "roles": Array [
                                      "#{Token[TOKEN.122]}",
                                    ],
                                    "stack": [Circular],
                                    "users": Array [
                                      "#{Token[TOKEN.123]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.121]}",
                            "referenceTaken": false,
                            "roles": Array [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": Array [],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.0]}",
                            "region": "\${Token[AWS.Region.4]}",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": Object {},
                          "managedPolicies": Array [
                            AwsManagedPolicy {
                              "managedPolicyArn": "\${Token[TOKEN.95]}",
                            },
                          ],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.121]}",
                                  "_policyName": "\${Token[TOKEN.121]}",
                                  "document": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "ec2:DescribeInstances",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      Object {
                                        "Action": "ec2:StartInstances",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.0]}",
                                    "region": "\${Token[AWS.Region.4]}",
                                  },
                                  "force": false,
                                  "groups": Array [],
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": Object {
                                            "groups": Array [
                                              "#{Token[TOKEN.124]}",
                                            ],
                                            "policyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": "ec2:DescribeInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                Object {
                                                  "Action": "ec2:StartInstances",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.121]}",
                                            "roles": Array [
                                              "#{Token[TOKEN.122]}",
                                            ],
                                            "users": Array [
                                              "#{Token[TOKEN.123]}",
                                            ],
                                          },
                                          "cfnOptions": Object {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": Array [
                                            "#{Token[TOKEN.124]}",
                                          ],
                                          "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {},
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [
                                                Object {
                                                  "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                                  "trace": Array [
                                                    "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                                    "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                                    "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                                    "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                                    "new Promise (<anonymous>)",
                                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                                  ],
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "policyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": "ec2:DescribeInstances",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              Object {
                                                "Action": "ec2:StartInstances",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.121]}",
                                          "rawOverrides": Object {},
                                          "roles": Array [
                                            "#{Token[TOKEN.122]}",
                                          ],
                                          "stack": [Circular],
                                          "users": Array [
                                            "#{Token[TOKEN.123]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.121]}",
                                  "referenceTaken": false,
                                  "roles": Array [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": Array [],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": Object {
                                    "assumeRolePolicyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": Object {
                                            "Service": "\${Token[lambda.amazonaws.com.97]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": undefined,
                                    "managedPolicyArns": Array [
                                      "#{Token[TOKEN.98]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "\${Token[TOKEN.96]}",
                                  },
                                  "assumeRolePolicyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": Object {
                                          "Service": "\${Token[lambda.amazonaws.com.97]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.100]}",
                                  "attrRoleId": "\${Token[TOKEN.101]}",
                                  "cfnOptions": Object {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.99]}",
                                  "managedPolicyArns": Array [
                                    "#{Token[TOKEN.98]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [
                                        Object {
                                          "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.99]}",
                                          "trace": Array [
                                            "new Role (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:327:18)",
                                            "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:544:31)",
                                            "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                            "new Promise (<anonymous>)",
                                            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                          ],
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": Object {},
                                  "roleName": "\${Token[TOKEN.96]}",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "initialTagPriority": 50,
                                    "priorities": Map {},
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "ServiceRole",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "\${Token[TOKEN.96]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": Object {},
                            "principalJson": Object {
                              "AWS": Array [
                                "\${Token[TOKEN.102]}",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.0]}",
                          "roleArn": "\${Token[TOKEN.102]}",
                          "roleId": "\${Token[TOKEN.101]}",
                          "roleName": "\${Token[TOKEN.104]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "handler",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "physicalName": "\${Token[TOKEN.94]}",
                  "role": Role {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "assumeRoleAction": "sts:AssumeRole",
                    "assumeRolePolicy": Object {
                      "Statement": Array [
                        Object {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": Object {
                            "Service": "\${Token[lambda.amazonaws.com.97]}",
                          },
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "attachedPolicies": AttachedPolicies {
                      "policies": Array [
                        Policy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": "\${Token[TOKEN.121]}",
                          "_policyName": "\${Token[TOKEN.121]}",
                          "document": Object {
                            "Statement": Array [
                              Object {
                                "Action": "ec2:DescribeInstances",
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                              Object {
                                "Action": "ec2:StartInstances",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.0]}",
                            "region": "\${Token[AWS.Region.4]}",
                          },
                          "force": false,
                          "groups": Array [],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": Object {
                                    "groups": Array [
                                      "#{Token[TOKEN.124]}",
                                    ],
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.121]}",
                                    "roles": Array [
                                      "#{Token[TOKEN.122]}",
                                    ],
                                    "users": Array [
                                      "#{Token[TOKEN.123]}",
                                    ],
                                  },
                                  "cfnOptions": Object {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": Array [
                                    "#{Token[TOKEN.124]}",
                                  ],
                                  "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [
                                        Object {
                                          "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                          "trace": Array [
                                            "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                            "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                            "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                            "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                            "new Promise (<anonymous>)",
                                            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                          ],
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "policyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "ec2:DescribeInstances",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      Object {
                                        "Action": "ec2:StartInstances",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.121]}",
                                  "rawOverrides": Object {},
                                  "roles": Array [
                                    "#{Token[TOKEN.122]}",
                                  ],
                                  "stack": [Circular],
                                  "users": Array [
                                    "#{Token[TOKEN.123]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.121]}",
                          "referenceTaken": false,
                          "roles": Array [
                            [Circular],
                          ],
                          "stack": [Circular],
                          "users": Array [],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      ],
                    },
                    "defaultPolicy": Policy {
                      "_allowCrossEnvironment": false,
                      "_physicalName": "\${Token[TOKEN.121]}",
                      "_policyName": "\${Token[TOKEN.121]}",
                      "document": Object {
                        "Statement": Array [
                          Object {
                            "Action": "ec2:DescribeInstances",
                            "Effect": "Allow",
                            "Resource": "*",
                          },
                          Object {
                            "Action": "ec2:StartInstances",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "env": Object {
                        "account": "\${Token[AWS.AccountId.0]}",
                        "region": "\${Token[AWS.Region.4]}",
                      },
                      "force": false,
                      "groups": Array [],
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": Object {
                                "groups": Array [
                                  "#{Token[TOKEN.124]}",
                                ],
                                "policyDocument": Object {
                                  "Statement": Array [
                                    Object {
                                      "Action": "ec2:DescribeInstances",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    Object {
                                      "Action": "ec2:StartInstances",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.121]}",
                                "roles": Array [
                                  "#{Token[TOKEN.122]}",
                                ],
                                "users": Array [
                                  "#{Token[TOKEN.123]}",
                                ],
                              },
                              "cfnOptions": Object {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": Array [
                                "#{Token[TOKEN.124]}",
                              ],
                              "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                              "node": ConstructNode {
                                "_actualNode": Node {
                                  "_aspects": Array [],
                                  "_children": Object {},
                                  "_context": Object {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": Array [
                                    Object {
                                      "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                      "trace": Array [
                                        "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                        "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                        "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                        "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                        "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                        "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                        "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                        "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                        "new Promise (<anonymous>)",
                                        "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                        "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                        "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                      ],
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": Array [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "invokedAspects": Array [],
                                  "scope": [Circular],
                                },
                                "host": [Circular],
                              },
                              "policyDocument": Object {
                                "Statement": Array [
                                  Object {
                                    "Action": "ec2:DescribeInstances",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  Object {
                                    "Action": "ec2:StartInstances",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.121]}",
                              "rawOverrides": Object {},
                              "roles": Array [
                                "#{Token[TOKEN.122]}",
                              ],
                              "stack": [Circular],
                              "users": Array [
                                "#{Token[TOKEN.123]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): Object {
                                "dependencyRoots": Array [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.121]}",
                      "referenceTaken": false,
                      "roles": Array [
                        [Circular],
                      ],
                      "stack": [Circular],
                      "users": Array [],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.0]}",
                      "region": "\${Token[AWS.Region.4]}",
                    },
                    "grantPrincipal": [Circular],
                    "inlinePolicies": Object {},
                    "managedPolicies": Array [
                      AwsManagedPolicy {
                        "managedPolicyArn": "\${Token[TOKEN.95]}",
                      },
                    ],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {
                          "DefaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.121]}",
                            "_policyName": "\${Token[TOKEN.121]}",
                            "document": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "ec2:DescribeInstances",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                Object {
                                  "Action": "ec2:StartInstances",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.0]}",
                              "region": "\${Token[AWS.Region.4]}",
                            },
                            "force": false,
                            "groups": Array [],
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": Object {
                                      "groups": Array [
                                        "#{Token[TOKEN.124]}",
                                      ],
                                      "policyDocument": Object {
                                        "Statement": Array [
                                          Object {
                                            "Action": "ec2:DescribeInstances",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          Object {
                                            "Action": "ec2:StartInstances",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.121]}",
                                      "roles": Array [
                                        "#{Token[TOKEN.122]}",
                                      ],
                                      "users": Array [
                                        "#{Token[TOKEN.123]}",
                                      ],
                                    },
                                    "cfnOptions": Object {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": Array [
                                      "#{Token[TOKEN.124]}",
                                    ],
                                    "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {},
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [
                                          Object {
                                            "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.DefaultPolicy.Resource.LogicalID.125]}",
                                            "trace": Array [
                                              "new Policy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/policy.ts:154:22)",
                                              "Role.addToPrincipalPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:368:28)",
                                              "Role.addToPolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:376:17)",
                                              "NodejsFunction.addToRolePolicy (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:263:15)",
                                              "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:51:12)",
                                              "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                              "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                              "new Promise (<anonymous>)",
                                              "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                              "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                              "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                            ],
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "ec2:DescribeInstances",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        Object {
                                          "Action": "ec2:StartInstances",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.3]}:ec2:\${Token[AWS.Region.4]}:\${Token[AWS.AccountId.0]}:instance/wakeywakey",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.121]}",
                                    "rawOverrides": Object {},
                                    "roles": Array [
                                      "#{Token[TOKEN.122]}",
                                    ],
                                    "stack": [Circular],
                                    "users": Array [
                                      "#{Token[TOKEN.123]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.121]}",
                            "referenceTaken": false,
                            "roles": Array [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": Array [],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "Resource": CfnRole {
                            "_cfnProperties": Object {
                              "assumeRolePolicyDocument": Object {
                                "Statement": Array [
                                  Object {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": Object {
                                      "Service": "\${Token[lambda.amazonaws.com.97]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "description": undefined,
                              "managedPolicyArns": Array [
                                "#{Token[TOKEN.98]}",
                              ],
                              "maxSessionDuration": undefined,
                              "path": undefined,
                              "permissionsBoundary": undefined,
                              "policies": undefined,
                              "roleName": "\${Token[TOKEN.96]}",
                            },
                            "assumeRolePolicyDocument": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": Object {
                                    "Service": "\${Token[lambda.amazonaws.com.97]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attrArn": "\${Token[TOKEN.100]}",
                            "attrRoleId": "\${Token[TOKEN.101]}",
                            "cfnOptions": Object {},
                            "cfnResourceType": "AWS::IAM::Role",
                            "dependsOn": Set {},
                            "description": undefined,
                            "logicalId": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.99]}",
                            "managedPolicyArns": Array [
                              "#{Token[TOKEN.98]}",
                            ],
                            "maxSessionDuration": undefined,
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [
                                  Object {
                                    "data": "\${Token[test-stack.wakeywakey.handler.ServiceRole.Resource.LogicalID.99]}",
                                    "trace": Array [
                                      "new Role (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-iam/lib/role.ts:327:18)",
                                      "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:544:31)",
                                      "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                      "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                      "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                      "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                      "new Promise (<anonymous>)",
                                      "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                      "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                      "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                    ],
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "Resource",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "path": undefined,
                            "permissionsBoundary": undefined,
                            "policies": undefined,
                            "rawOverrides": Object {},
                            "roleName": "\${Token[TOKEN.96]}",
                            "stack": [Circular],
                            "tags": TagManager {
                              "initialTagPriority": 50,
                              "priorities": Map {},
                              "resourceTypeName": "AWS::IAM::Role",
                              "tagFormatter": StandardFormatter {},
                              "tagPropertyName": "tags",
                              "tags": Map {},
                            },
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "ServiceRole",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "permissionsBoundary": undefined,
                    "physicalName": "\${Token[TOKEN.96]}",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": Object {},
                      "principalJson": Object {
                        "AWS": Array [
                          "\${Token[TOKEN.102]}",
                        ],
                      },
                    },
                    "principalAccount": "\${Token[AWS.AccountId.0]}",
                    "roleArn": "\${Token[TOKEN.102]}",
                    "roleId": "\${Token[TOKEN.101]}",
                    "roleName": "\${Token[TOKEN.104]}",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "runtime": Runtime {
                    "bundlingDockerImage": "amazon/aws-sam-cli-build-image-nodejs12.x",
                    "family": 0,
                    "name": "nodejs12.x",
                    "supportsInlineCode": true,
                  },
                  "stack": [Circular],
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
                "rule": Rule {
                  "_allowCrossEnvironment": false,
                  "_physicalName": undefined,
                  "accountEventBusTargets": Object {},
                  "description": undefined,
                  "env": Object {
                    "account": "\${Token[AWS.AccountId.0]}",
                    "region": "\${Token[AWS.Region.4]}",
                  },
                  "eventPattern": Object {},
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "AllowEventRuleteststackwakeywakeyruleBF7CA038": CfnPermission {
                          "_cfnProperties": Object {
                            "action": "lambda:InvokeFunction",
                            "eventSourceToken": undefined,
                            "functionName": "\${Token[TOKEN.120]}",
                            "principal": "events.amazonaws.com",
                            "sourceAccount": undefined,
                            "sourceArn": "\${Token[TOKEN.129]}",
                          },
                          "action": "lambda:InvokeFunction",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Permission",
                          "dependsOn": Set {},
                          "eventSourceToken": undefined,
                          "functionName": "\${Token[TOKEN.120]}",
                          "logicalId": "\${Token[test-stack.wakeywakey.rule.AllowEventRuleteststackwakeywakeyruleBF7CA038.LogicalID.132]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.wakeywakey.rule.AllowEventRuleteststackwakeywakeyruleBF7CA038.LogicalID.132]}",
                                  "trace": Array [
                                    "NodejsFunction.addPermission (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function-base.ts:245:5)",
                                    "Object.addLambdaPermission (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-events-targets/lib/util.ts:40:13)",
                                    "LambdaFunction.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-events-targets/lib/lambda.ts:33:5)",
                                    "Rule.addTarget (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-events/lib/rule.ts:166:32)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:67:10)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "AllowEventRuleteststackwakeywakeyruleBF7CA038",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "principal": "events.amazonaws.com",
                          "rawOverrides": Object {},
                          "sourceAccount": undefined,
                          "sourceArn": "\${Token[TOKEN.129]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnRule {
                          "_cfnProperties": Object {
                            "description": undefined,
                            "eventBusName": undefined,
                            "eventPattern": "<unresolved-lazy>",
                            "name": "\${Token[TOKEN.126]}",
                            "scheduleExpression": "cron(15 4 * * ? *)",
                            "state": "ENABLED",
                            "targets": "<unresolved-lazy>",
                          },
                          "attrArn": "\${Token[TOKEN.128]}",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Events::Rule",
                          "dependsOn": Set {},
                          "description": undefined,
                          "eventBusName": undefined,
                          "eventPattern": "<unresolved-lazy>",
                          "logicalId": "\${Token[test-stack.wakeywakey.rule.Resource.LogicalID.127]}",
                          "name": "\${Token[TOKEN.126]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.wakeywakey.rule.Resource.LogicalID.127]}",
                                  "trace": Array [
                                    "new Rule (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-events/lib/rule.ts:130:22)",
                                    "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:63:18)",
                                    "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                    "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                    "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                    "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "rawOverrides": Object {},
                          "roleArn": undefined,
                          "scheduleExpression": "cron(15 4 * * ? *)",
                          "stack": [Circular],
                          "state": "ENABLED",
                          "targets": "<unresolved-lazy>",
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "rule",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "physicalName": "\${Token[TOKEN.126]}",
                  "ruleArn": "\${Token[TOKEN.129]}",
                  "ruleName": "\${Token[TOKEN.131]}",
                  "scheduleExpression": "cron(15 4 * * ? *)",
                  "stack": [Circular],
                  "targets": Array [
                    Object {
                      "arn": "\${Token[TOKEN.120]}",
                      "batchParameters": undefined,
                      "ecsParameters": undefined,
                      "id": "Target0",
                      "input": "\${Token[TOKEN.133]}",
                      "inputPath": undefined,
                      "inputTransformer": undefined,
                      "kinesisParameters": undefined,
                      "roleArn": undefined,
                      "runCommandParameters": undefined,
                      "sqsParameters": undefined,
                    },
                  ],
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
              },
              "_context": Object {},
              "_dependencies": Set {},
              "_locked": false,
              "_metadata": Array [],
              "_validations": Array [],
              "host": [Circular],
              "id": "wakeywakey",
              "invokedAspects": Array [],
              "scope": [Circular],
            },
            "host": [Circular],
          },
          Symbol(@aws-cdk/core.DependableTrait): Object {
            "dependencyRoots": Array [
              [Circular],
            ],
          },
        },
      },
      "_context": Object {},
      "_dependencies": Set {},
      "_locked": false,
      "_metadata": Array [
        Object {
          "data": Object {
            "artifactHashParameter": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.107]}",
            "id": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
            "packaging": "zip",
            "path": "asset.95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
            "s3BucketParameter": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.105]}",
            "s3KeyParameter": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.106]}",
            "sourceHash": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
          },
          "trace": Array [
            "ConstructNode.addMetadata (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/construct-compat.ts:431:92)",
            "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:163:23)",
            "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
            "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
            "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
            "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
            "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
            "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
            "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
            "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
            "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
            "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
            "new Promise (<anonymous>)",
            "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
            "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
            "processTicksAndRejections (node:internal/process/task_queues:93:5)",
          ],
          "type": "aws:cdk:asset",
        },
      ],
      "_validations": Array [],
      "host": [Circular],
      "id": "test-stack",
      "invokedAspects": Array [],
      "scope": App {
        "_assemblyBuilder": CloudAssemblyBuilder {
          "artifacts": Object {},
          "assetOutdir": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.out1V6KFP",
          "missing": Array [],
          "outdir": "/private/var/folders/kc/8rzdqjhd7hg5zf33fh7vgkrm0000gn/T/cdk.out1V6KFP",
          "parentBuilder": undefined,
        },
        "account": undefined,
        "node": ConstructNode {
          "_actualNode": Node {
            "_aspects": Array [],
            "_children": Object {
              "Tree": TreeMetadata {
                "node": ConstructNode {
                  "_actualNode": Node {
                    "_aspects": Array [],
                    "_children": Object {},
                    "_context": Object {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": Array [],
                    "_validations": Array [],
                    "host": [Circular],
                    "id": "Tree",
                    "invokedAspects": Array [],
                    "scope": [Circular],
                  },
                  "host": [Circular],
                },
                Symbol(@aws-cdk/core.DependableTrait): Object {
                  "dependencyRoots": Array [
                    [Circular],
                  ],
                },
              },
              "test-stack": [Circular],
            },
            "_context": Object {},
            "_dependencies": Set {},
            "_locked": false,
            "_metadata": Array [],
            "_validations": Array [],
            "host": [Circular],
            "id": "",
            "invokedAspects": Array [],
            "scope": undefined,
          },
          "host": [Circular],
        },
        "parentStage": undefined,
        "region": undefined,
        "stageName": "",
        Symbol(@aws-cdk/core.DependableTrait): Object {
          "dependencyRoots": Array [
            [Circular],
          ],
        },
      },
    },
    "host": [Circular],
  },
  "region": "\${Token[AWS.Region.4]}",
  "synthesizer": LegacyStackSynthesizer {
    "_assetParameters": Construct {
      "node": ConstructNode {
        "_actualNode": Node {
          "_aspects": Array [],
          "_children": Object {
            "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8": FileAssetParameters {
              "artifactHashParameter": CfnParameter {
                "_allowedPattern": undefined,
                "_allowedValues": undefined,
                "_constraintDescription": undefined,
                "_default": undefined,
                "_description": "Artifact hash for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                "_maxLength": undefined,
                "_maxValue": undefined,
                "_minLength": undefined,
                "_minValue": undefined,
                "_noEcho": undefined,
                "_type": "String",
                "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.107]}",
                "node": ConstructNode {
                  "_actualNode": Node {
                    "_aspects": Array [],
                    "_children": Object {},
                    "_context": Object {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": Array [
                      Object {
                        "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.107]}",
                        "trace": Array [
                          "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:26:34)",
                          "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                          "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                          "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                          "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                          "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                          "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                          "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                          "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                          "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                          "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                          "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                          "new Promise (<anonymous>)",
                          "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                          "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                        ],
                        "type": "aws:cdk:logicalId",
                      },
                    ],
                    "_validations": Array [],
                    "host": [Circular],
                    "id": "ArtifactHash",
                    "invokedAspects": Array [],
                    "scope": [Circular],
                  },
                  "host": [Circular],
                },
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): Object {
                  "dependencyRoots": Array [
                    [Circular],
                  ],
                },
              },
              "bucketNameParameter": CfnParameter {
                "_allowedPattern": undefined,
                "_allowedValues": undefined,
                "_constraintDescription": undefined,
                "_default": undefined,
                "_description": "S3 bucket for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                "_maxLength": undefined,
                "_maxValue": undefined,
                "_minLength": undefined,
                "_minValue": undefined,
                "_noEcho": undefined,
                "_type": "String",
                "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.105]}",
                "node": ConstructNode {
                  "_actualNode": Node {
                    "_aspects": Array [],
                    "_children": Object {},
                    "_context": Object {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": Array [
                      Object {
                        "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.105]}",
                        "trace": Array [
                          "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:16:32)",
                          "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                          "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                          "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                          "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                          "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                          "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                          "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                          "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                          "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                          "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                          "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                          "new Promise (<anonymous>)",
                          "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                          "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                        ],
                        "type": "aws:cdk:logicalId",
                      },
                    ],
                    "_validations": Array [],
                    "host": [Circular],
                    "id": "S3Bucket",
                    "invokedAspects": Array [],
                    "scope": [Circular],
                  },
                  "host": [Circular],
                },
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): Object {
                  "dependencyRoots": Array [
                    [Circular],
                  ],
                },
              },
              "node": ConstructNode {
                "_actualNode": Node {
                  "_aspects": Array [],
                  "_children": Object {
                    "ArtifactHash": CfnParameter {
                      "_allowedPattern": undefined,
                      "_allowedValues": undefined,
                      "_constraintDescription": undefined,
                      "_default": undefined,
                      "_description": "Artifact hash for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                      "_maxLength": undefined,
                      "_maxValue": undefined,
                      "_minLength": undefined,
                      "_minValue": undefined,
                      "_noEcho": undefined,
                      "_type": "String",
                      "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.107]}",
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {},
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [
                            Object {
                              "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.ArtifactHash.LogicalID.107]}",
                              "trace": Array [
                                "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:26:34)",
                                "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                                "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                                "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                                "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                                "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                                "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                                "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                                "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                "new Promise (<anonymous>)",
                                "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                              ],
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "ArtifactHash",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                    "S3Bucket": CfnParameter {
                      "_allowedPattern": undefined,
                      "_allowedValues": undefined,
                      "_constraintDescription": undefined,
                      "_default": undefined,
                      "_description": "S3 bucket for asset \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                      "_maxLength": undefined,
                      "_maxValue": undefined,
                      "_minLength": undefined,
                      "_minValue": undefined,
                      "_noEcho": undefined,
                      "_type": "String",
                      "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.105]}",
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {},
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [
                            Object {
                              "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...df38b55fbda1b1c712a3137cf616648536aed8.S3Bucket.LogicalID.105]}",
                              "trace": Array [
                                "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:16:32)",
                                "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                                "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                                "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                                "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                                "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                                "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                                "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                                "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                "new Promise (<anonymous>)",
                                "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                              ],
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "S3Bucket",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                    "S3VersionKey": CfnParameter {
                      "_allowedPattern": undefined,
                      "_allowedValues": undefined,
                      "_constraintDescription": undefined,
                      "_default": undefined,
                      "_description": "S3 key for asset version \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                      "_maxLength": undefined,
                      "_maxValue": undefined,
                      "_minLength": undefined,
                      "_minValue": undefined,
                      "_noEcho": undefined,
                      "_type": "String",
                      "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.106]}",
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {},
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [
                            Object {
                              "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.106]}",
                              "trace": Array [
                                "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:21:31)",
                                "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                                "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                                "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                                "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                                "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                                "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                                "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                                "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                                "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                                "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                                "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                                "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                                "new Promise (<anonymous>)",
                                "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                                "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                                "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                              ],
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "S3VersionKey",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": Object {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": Array [],
                  "_validations": Array [],
                  "host": [Circular],
                  "id": "95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8",
                  "invokedAspects": Array [],
                  "scope": [Circular],
                },
                "host": [Circular],
              },
              "objectKeyParameter": CfnParameter {
                "_allowedPattern": undefined,
                "_allowedValues": undefined,
                "_constraintDescription": undefined,
                "_default": undefined,
                "_description": "S3 key for asset version \\"95de0e5b2be4e5d0a1fef77e0edf38b55fbda1b1c712a3137cf616648536aed8\\"",
                "_maxLength": undefined,
                "_maxValue": undefined,
                "_minLength": undefined,
                "_minValue": undefined,
                "_noEcho": undefined,
                "_type": "String",
                "logicalId": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.106]}",
                "node": ConstructNode {
                  "_actualNode": Node {
                    "_aspects": Array [],
                    "_children": Object {},
                    "_context": Object {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": Array [
                      Object {
                        "data": "\${Token[test-stack.AssetParameters.95de0e5b2be4e5d0a1fe...b55fbda1b1c712a3137cf616648536aed8.S3VersionKey.LogicalID.106]}",
                        "trace": Array [
                          "new FileAssetParameters (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/private/asset-parameters.ts:21:31)",
                          "LegacyStackSynthesizer.doAddFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:150:16)",
                          "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:74:19)",
                          "Stack.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack.ts:653:29)",
                          "LegacyStackSynthesizer.addFileAsset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/core/lib/stack-synthesizers/legacy.ts:78:25)",
                          "new Asset (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-s3-assets/lib/asset.ts:147:40)",
                          "AssetCode.bind (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/code.ts:247:20)",
                          "new Function (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda/lib/function.ts:564:29)",
                          "new NodejsFunction (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:107:5)",
                          "new WakeyWakey (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/src/wakeywakey.ts:44:20)",
                          "Object.<anonymous> (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/test/wakeywakey.test.ts:18:3)",
                          "Object.asyncJestTest (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)",
                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:45:12",
                          "new Promise (<anonymous>)",
                          "mapper (/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:28:19)",
                          "/Users/pgollucci/src/github.com/pgollucci/wakeywakey/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
                          "processTicksAndRejections (node:internal/process/task_queues:93:5)",
                        ],
                        "type": "aws:cdk:logicalId",
                      },
                    ],
                    "_validations": Array [],
                    "host": [Circular],
                    "id": "S3VersionKey",
                    "invokedAspects": Array [],
                    "scope": [Circular],
                  },
                  "host": [Circular],
                },
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): Object {
                  "dependencyRoots": Array [
                    [Circular],
                  ],
                },
              },
              Symbol(@aws-cdk/core.DependableTrait): Object {
                "dependencyRoots": Array [
                  [Circular],
                ],
              },
            },
          },
          "_context": Object {},
          "_dependencies": Set {},
          "_locked": false,
          "_metadata": Array [],
          "_validations": Array [],
          "host": [Circular],
          "id": "AssetParameters",
          "invokedAspects": Array [],
          "scope": [Circular],
        },
        "host": [Circular],
      },
      Symbol(@aws-cdk/core.DependableTrait): Object {
        "dependencyRoots": Array [
          [Circular],
        ],
      },
    },
    "addedImageAssets": Set {},
    "cycle": false,
    "stack": [Circular],
  },
  "tags": TagManager {
    "initialTagPriority": 50,
    "priorities": Map {},
    "resourceTypeName": "aws:cdk:stack",
    "tagFormatter": KeyValueFormatter {},
    "tagPropertyName": "tags",
    "tags": Map {},
  },
  "templateFile": "test-stack.template.json",
  "templateOptions": Object {},
  "terminationProtection": undefined,
  Symbol(@aws-cdk/core.DependableTrait): Object {
    "dependencyRoots": Array [
      [Circular],
    ],
  },
}
`;
